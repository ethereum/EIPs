
// code generated using pythonref/generate_falcon_test_vectors.py.
pragma solidity ^0.8.25;

import {Test, console} from "forge-std/Test.sol";
import "../src/ZKNOX_NTT.sol";
import "../src/ZKNOX_falcon_utils.sol";
import "../src/ZKNOX_falcon.sol";
import "../src/ZKNOX_falcon_core.sol";
import "../src/ZKNOX_falcon_deploy.sol";

contract ZKNOX_FalconTest is Test {
    ZKNOX_falcon falcon;

    //stateful initialisation
    function setUp() public {
        bytes32 salt = keccak256(abi.encodePacked("ZKnox"));

        falcon = new ZKNOX_falcon();
    }
function testVector0() public view {
// public key
// uncompressed pk = [10801, 4232, 5459, 11291, 11617, 6672, 3181, 7235, 6277, 11587, 9475, 3223, 6163, 1264, 1968, 3205, 3530, 3165, 4215, 125, 10423, 1623, 12148, 4735, 8393, 2401, 10147, 3362, 5998, 9467, 11765, 11191, 647, 11577, 7308, 11070, 1104, 555, 10204, 5072, 3692, 10621, 9638, 7684, 12265, 6089, 5831, 8267, 5236, 11342, 6111, 9831, 2028, 9056, 7227, 7048, 6882, 5545, 2282, 11026, 6177, 10346, 5574, 8968, 306, 10602, 3821, 8062, 1767, 2933, 11766, 5552, 5637, 1984, 9277, 183, 8288, 9427, 408, 3127, 9196, 4478, 12273, 3280, 11134, 10187, 1906, 7328, 9049, 8658, 10711, 6608, 8544, 2098, 5098, 8660, 9811, 11340, 1631, 11659, 10935, 10253, 1699, 5994, 1241, 6277, 10575, 7252, 6909, 6378, 699, 10683, 6056, 3937, 6060, 2623, 7878, 3611, 4124, 11905, 292, 6034, 5088, 6201, 11979, 8945, 8153, 6703, 9255, 6899, 7748, 4666, 1047, 2071, 6781, 1738, 12048, 9437, 9322, 9433, 11963, 949, 10369, 4765, 4392, 10006, 3291, 11138, 5256, 3971, 5289, 5168, 7870, 11141, 4678, 2951, 337, 1613, 434, 10382, 4103, 3083, 4420, 10700, 5760, 8761, 405, 4541, 6766, 483, 2941, 6298, 5878, 5102, 1096, 5664, 6755, 586, 10921, 10037, 10749, 10533, 1446, 1662, 9112, 3790, 7364, 54, 4634, 1049, 11406, 441, 4811, 7143, 10566, 2853, 9448, 7785, 11381, 3938, 5726, 4997, 7680, 2449, 1444, 11970, 9141, 8427, 11139, 722, 11395, 4937, 12219, 10626, 2493, 8458, 2034, 5328, 366, 935, 9904, 2264, 11834, 1695, 12152, 12258, 5111, 4194, 6676, 7811, 11447, 2073, 2767, 2154, 1377, 3468, 4083, 7813, 12079, 9451, 11777, 11618, 6770, 10262, 1609, 1158, 10740, 4165, 1340, 9981, 4340, 5731, 5313, 3746, 10249, 7431, 4014, 7691, 6564, 587, 3675, 9650, 6680, 1934, 8571, 8522, 501, 4425, 8524, 7788, 2511, 4879, 1805, 279, 7522, 5912, 872, 10799, 7437, 4893, 2540, 8058, 10061, 6782, 2583, 2942, 9338, 2934, 8368, 10380, 6784, 11892, 10908, 6832, 5942, 1910, 6648, 4648, 5634, 11916, 11379, 8617, 1303, 8804, 262, 2999, 1729, 4475, 11102, 5360, 1879, 5551, 7764, 11472, 6990, 4438, 8824, 10934, 5333, 10903, 12020, 5807, 8070, 11514, 764, 350, 4651, 11933, 3192, 6508, 2679, 11179, 5934, 5862, 2389, 4929, 12127, 7534, 6259, 3837, 10847, 9613, 7612, 3813, 8407, 6347, 4599, 6846, 1177, 5376, 8757, 11896, 1293, 10232, 3008, 11996, 9557, 4754, 3270, 10705, 7359, 4135, 9781, 4182, 4065, 8255, 8616, 151, 2379, 11806, 9979, 9624, 6296, 4981, 8813, 11926, 9848, 12119, 5813, 4975, 4483, 10644, 2851, 8127, 8404, 9979, 6586, 1800, 5186, 6689, 11948, 1519, 6416, 6492, 9561, 9621, 9172, 1404, 10062, 4709, 3836, 806, 5329, 9013, 7146, 4434, 6881, 1115, 2707, 9491, 10420, 2911, 4599, 329, 4377, 9941, 4617, 3685, 1058, 373, 9393, 3636, 9068, 2254, 8113, 9411, 848, 4148, 6530, 5420, 2940, 7132, 6254, 10486, 4923, 8350, 1118, 1344, 1912, 3558, 2863, 2421, 6605, 9760, 1308, 4179, 10535, 10086, 9639, 1899, 6731, 4545, 6425, 7369, 8623, 264, 6670, 7476, 2818, 5601, 2361, 911, 6983, 11873, 6799, 6131, 9926, 7667, 9882, 6287, 3173, 225, 7166, 2088, 10329, 845, 7059, 10625, 12050, 3185, 2759, 1081, 1118, 10201, 746, 5674, 11334, 9024, 6896, 5963, 3274, 7121, 6, 6833, 3551, 1473, 11501, 5327, 9995, 4483, 5782, 11070, 8410, 2745, 3559, 7085, 5856, 1718, 6552, 9091, 1098, 11382]
// forgefmt: disable-next-line
uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
uint256[] memory pkc = new uint[](32);
for (uint256 i = 0; i < 32; i++) {
	pkc[i] = tmp_pkc[i];
}
// signature s2
// uncompressed s2 = [12172, 12087, 192, 12135, 105, 11923, 185, 78, 12284, 12220, 12034, 224, 12276, 141, 12263, 12055, 12191, 200, 82, 12199, 5, 12153, 12274, 3, 70, 8, 122, 20, 12163, 11947, 12100, 128, 12178, 12152, 198, 12228, 67, 54, 102, 12257, 170, 12272, 12133, 12262, 77, 12147, 12215, 69, 59, 47, 135, 74, 146, 190, 12222, 278, 208, 69, 51, 12126, 12086, 11984, 12245, 10, 12237, 125, 77, 10, 27, 12282, 12272, 217, 12247, 12015, 12214, 169, 12114, 45, 12091, 11974, 82, 12260, 12195, 12264, 12214, 12275, 392, 12234, 28, 11910, 242, 12104, 12072, 12, 12278, 94, 12168, 12052, 101, 41, 12254, 61, 134, 11989, 12108, 12148, 70, 20, 45, 12286, 12044, 12141, 117, 18, 12121, 251, 282, 12167, 13, 12284, 63, 11862, 12249, 12237, 16, 12, 12144, 12236, 12260, 12207, 145, 175, 187, 12253, 148, 31, 203, 28, 12125, 185, 94, 12244, 12282, 12086, 12201, 97, 21, 285, 15, 44, 22, 12189, 104, 12148, 12160, 305, 106, 73, 4, 23, 12249, 11896, 53, 12124, 39, 12233, 12235, 12283, 12148, 188, 12045, 9, 5, 12196, 12261, 172, 156, 47, 12282, 12164, 69, 12242, 7, 277, 113, 12173, 12066, 12112, 190, 66, 12140, 11971, 12238, 156, 12073, 12221, 180, 258, 172, 12262, 12279, 47, 12033, 77, 375, 12176, 11983, 68, 12091, 12265, 183, 12121, 12206, 12152, 81, 296, 12189, 12249, 11984, 76, 105, 244, 12230, 12130, 52, 12111, 12056, 12099, 11, 131, 12262, 12212, 28, 12130, 12185, 171, 107, 137, 106, 12179, 12206, 310, 12135, 74, 12264, 158, 100, 12228, 0, 12031, 9, 12034, 12185, 136, 12209, 12252, 12113, 146, 12094, 12079, 12146, 12260, 161, 12223, 44, 198, 12060, 17, 229, 188, 12144, 23, 194, 12266, 12275, 176, 12116, 136, 42, 54, 133, 12073, 34, 12029, 12237, 63, 47, 76, 12207, 12152, 218, 12110, 158, 32, 12169, 86, 11919, 12084, 12223, 12175, 20, 12277, 12239, 12277, 14, 12063, 44, 12283, 454, 353, 12153, 161, 12019, 71, 12247, 92, 66, 12087, 150, 12280, 98, 492, 12021, 26, 12229, 12170, 12203, 240, 93, 12036, 158, 12248, 12221, 12126, 92, 229, 12286, 12053, 160, 83, 12266, 10, 12168, 12268, 360, 12197, 12204, 72, 68, 12183, 138, 52, 128, 4, 12260, 254, 350, 62, 12169, 12221, 11965, 12103, 12246, 12120, 46, 53, 12144, 93, 11899, 181, 12087, 12171, 12224, 12124, 12061, 11908, 188, 12177, 143, 49, 61, 28, 155, 12211, 174, 27, 12256, 171, 287, 12207, 12103, 12255, 12245, 11996, 12138, 12247, 93, 12116, 12155, 99, 42, 12049, 84, 54, 197, 2, 209, 12138, 11880, 12256, 12041, 139, 26, 12288, 102, 151, 267, 12221, 413, 58, 12162, 12121, 12148, 407, 11978, 230, 147, 12227, 12075, 290, 260, 55, 12205, 12107, 12240, 11930, 54, 291, 86, 307, 12221, 12168, 306, 252, 89, 154, 21, 49, 55, 228, 66, 12105, 51, 306, 32, 12126, 121, 12004, 12179, 18, 12170, 162, 12217, 118, 11934, 12223, 312, 318, 37, 12099, 113, 12079, 18, 11914, 16, 12214, 12222, 284, 136, 11932, 17, 12219, 12226, 43, 45, 12219, 12285, 12246, 113, 247, 42, 119, 39, 12214, 12226, 12145, 12130, 12186, 196, 12092, 12277, 263, 49, 12204, 12251, 211, 12129, 49, 12234, 12090, 11949, 377]
// forgefmt: disable-next-line
uint256[32] memory tmp_s2 = [21299671975787483454790402018496259712325154098698828370862796902048963440524, 226482644561092801897613003311591793491464477287443953390217386369311322015, 122241768215234212762829461233206915525091542269434133652196666067046117266, 17998600124730622827465990899026975431920967581729901424009026369714323515, 21156552726390114447912652470199481904643883857534790873521589824973084372941, 166414638319359694539675323431761741043307735201951903340794358417336827986, 21451614924126190838060080098931214529037792752475566277715416002725544210312, 21619468086225573149428575687681504604739876340506400383036250394919471022197, 21354444752013408991527203716041803392832851588841014790823564527783031812068, 40637590359720631756101950821212066384251755770640449468737583935557545897, 304228256065111465341595114396824176330096899003450390299007497041692078041, 21151253506241730037214008021307237001806313126801305624031661634239557730460, 120468666454760826934618408257990251737086348137219304739400371046851555278, 21432184616009917607269660114506949891222288898806366184877936761055983775547, 21518433259746648670717331844331216366351090502579212557941552317525499248692, 21647739391709647690802008982923383029008210205554608875280491239402655592366, 40964884159568868602122268505814142421304112730977685866577034491435560785, 134281644066644075952295235160147398920909894081157681132255108571974992066, 21691911382121948660240887888667851751942217725501296445477391473357788557231, 21696886004442863450261761150950129663128179474933041610268931151502459731982, 404610463137767168486106082172428680248662411074833208161405963809904656482, 91879772852911984237518509646383898093449686531778472006833239623202058238, 164644178638518845312982181671048221605431573972257798857853361098856857728, 21574973686812103371699961732701920024338479494313547651614704632000563981947, 175245562549033153724892418326575979114467271119590358939154166249244262574, 266796661751086246441058213427294247068745218289871840260809319750822854698, 97183598268319474873784359172567103256595448544293089836817574924407079179, 86576072396373326456075399840772528545065258380973319625452012942335356845, 208817323379001257158570910002768001779019792526753026636949068845966164023, 21082022843605336096552002185742069167530055866640863550830674291014571601566, 21458687219065978677109946072223714604125558224559441365838144304995083419665, 666423492797790993818496611161184796611027378170087972178025157084774543202];
uint256[] memory s2 = new uint256[](32);
for (uint i = 0; i < 32; i++) {
	s2[i] = tmp_s2[i];
}
// message = "\x4d\x79\x20\x6e\x61\x6d\x65\x20\x69\x73\x20\x52\x65\x6e\x61\x75\x64\x20\x66\x72\x6f\x6d\x20\x5a\x4b\x4e\x4f\x58\x21\x21\x21\x21"
// salt = "\xab\x0b\xae\x31\x63\x39\x89\x43\x04\xe3\x58\x77\xb0\xc2\x8a\x9b\x1f\xd1\x66\xc7\x96\xb9\xcc\x25\x8a\x06\x4a\x8f\x57\xe2\x7f\x2a\x5b\x8d\x54\x8a\x72\x8c\x94\x44"
// hash to point
// forgefmt: disable-next-line
uint256[512] memory _hashed = [uint256(4643), 8890, 7599, 3818, 3920, 156, 1149, 8934, 2177, 8085, 3571, 5176, 6195, 2666, 3782, 1481, 9991, 1314, 6137, 9729, 10248, 1211, 7215, 6779, 4329, 285, 5149, 4641, 5853, 4677, 10238, 10810, 12061, 8024, 547, 9764, 11118, 4432, 1206, 9724, 12243, 3217, 1119, 9214, 9297, 9115, 5399, 2488, 159, 9702, 12203, 11928, 2696, 9069, 2892, 1436, 7397, 9593, 3074, 2929, 3722, 3847, 4011, 7200, 7563, 2968, 6857, 272, 10484, 7628, 3326, 2629, 5481, 4177, 2713, 6396, 2392, 5669, 6300, 11422, 4572, 4440, 3638, 562, 7443, 5049, 1336, 923, 6322, 9624, 7510, 5699, 10217, 11982, 2092, 1242, 8500, 3854, 6752, 4606, 2039, 8910, 8149, 11253, 1588, 4729, 9885, 2526, 3485, 2216, 6910, 2091, 10835, 6624, 1778, 1195, 9435, 3681, 11191, 10268, 195, 4677, 2600, 1128, 5404, 5380, 9977, 1839, 6141, 4549, 8937, 2473, 7771, 7985, 1914, 10772, 3445, 3364, 11784, 4657, 2323, 8788, 2472, 4769, 3011, 8595, 3074, 1892, 6376, 3904, 3446, 7516, 4415, 10366, 9636, 11954, 11878, 3180, 11109, 5140, 6362, 6127, 3822, 8578, 2859, 2387, 9325, 3062, 605, 10202, 8984, 2613, 3375, 5895, 6762, 192, 7622, 8228, 2938, 4234, 1018, 4259, 9378, 10922, 11652, 9530, 9314, 12124, 6133, 11593, 11858, 9038, 1367, 1436, 5660, 3774, 11685, 5890, 5036, 11295, 4455, 3855, 8347, 7870, 4321, 2915, 10110, 6989, 12087, 2667, 6395, 6842, 6468, 3482, 5386, 1876, 5795, 5000, 4194, 1668, 136, 11289, 8610, 4883, 11046, 9285, 3780, 10377, 4139, 4213, 4989, 6218, 908, 2395, 8042, 3832, 6410, 4365, 1574, 10695, 10425, 1778, 3156, 2475, 5593, 6396, 10559, 8645, 5170, 4844, 759, 6009, 7843, 5304, 8342, 8425, 11498, 5621, 10536, 11707, 11507, 1208, 11843, 6613, 9824, 1545, 5848, 917, 1781, 4129, 3054, 1140, 9875, 8446, 3651, 607, 10838, 5784, 5525, 5344, 2376, 8152, 7705, 5265, 6002, 8928, 2477, 201, 4861, 9317, 9587, 8528, 2301, 12104, 8797, 5737, 10792, 2983, 8754, 11072, 11951, 1319, 9808, 4398, 4209, 1498, 10667, 4630, 1844, 7433, 1903, 5552, 11065, 9401, 7713, 4533, 10525, 10555, 1364, 3297, 2995, 12002, 9199, 3805, 11585, 11133, 8717, 7370, 7154, 9828, 9518, 11217, 3095, 11110, 3330, 5230, 2807, 7888, 3313, 11804, 8944, 4971, 7036, 10781, 5117, 4554, 2957, 10934, 2954, 1881, 4816, 4556, 8442, 5080, 5897, 1248, 9823, 1271, 1577, 2341, 3133, 6588, 8798, 5466, 2465, 2429, 10531, 7561, 9941, 4334, 716, 5606, 8928, 9566, 4675, 533, 5409, 1384, 1624, 3916, 6110, 3631, 787, 9276, 644, 3279, 10623, 8724, 293, 12108, 5, 3878, 9924, 7676, 3866, 11394, 8104, 78, 1641, 10334, 4568, 984, 7328, 5142, 10013, 8221, 7457, 4188, 1112, 9472, 819, 6785, 1064, 5617, 10254, 1028, 4622, 5498, 9294, 3685, 2143, 5292, 4317, 11731, 5047, 6368, 158, 832, 1242, 6384, 6926, 2302, 5521, 2676, 11311, 7986, 3152, 2622, 7745, 7942, 3125, 10401, 4920, 3832, 6122, 10299, 2418, 7563, 7429, 3658, 818, 3972, 10763, 8486, 4864, 9401, 6514, 8531, 2133, 9360, 1175, 3871, 8258, 3723, 11227, 2871, 550, 7585, 7780, 1988, 6916, 3820, 1291, 8115, 4404, 11804, 10995, 200, 10546, 10324, 11567, 2950, 7969, 3232, 3366, 8458, 12075, 11551, 6115, 5759, 8152, 5996, 6451, 10922, 9977, 6001, 2342, 10608, 10661, 4679, 12055, 10269, 3864, 10006, 7852, 9161, 9654, 9147, 8081, 5935, 7014, 5112];
uint256[] memory hashed = new uint256[](512);
for (uint i = 0; i < 512; i++) {
	hashed[i] = _hashed[i];
}
bool result = falcon_core(s2, pkc, hashed);
assertEq(true, result);}
function testVector1() public view {
// public key
// uncompressed pk = [10801, 4232, 5459, 11291, 11617, 6672, 3181, 7235, 6277, 11587, 9475, 3223, 6163, 1264, 1968, 3205, 3530, 3165, 4215, 125, 10423, 1623, 12148, 4735, 8393, 2401, 10147, 3362, 5998, 9467, 11765, 11191, 647, 11577, 7308, 11070, 1104, 555, 10204, 5072, 3692, 10621, 9638, 7684, 12265, 6089, 5831, 8267, 5236, 11342, 6111, 9831, 2028, 9056, 7227, 7048, 6882, 5545, 2282, 11026, 6177, 10346, 5574, 8968, 306, 10602, 3821, 8062, 1767, 2933, 11766, 5552, 5637, 1984, 9277, 183, 8288, 9427, 408, 3127, 9196, 4478, 12273, 3280, 11134, 10187, 1906, 7328, 9049, 8658, 10711, 6608, 8544, 2098, 5098, 8660, 9811, 11340, 1631, 11659, 10935, 10253, 1699, 5994, 1241, 6277, 10575, 7252, 6909, 6378, 699, 10683, 6056, 3937, 6060, 2623, 7878, 3611, 4124, 11905, 292, 6034, 5088, 6201, 11979, 8945, 8153, 6703, 9255, 6899, 7748, 4666, 1047, 2071, 6781, 1738, 12048, 9437, 9322, 9433, 11963, 949, 10369, 4765, 4392, 10006, 3291, 11138, 5256, 3971, 5289, 5168, 7870, 11141, 4678, 2951, 337, 1613, 434, 10382, 4103, 3083, 4420, 10700, 5760, 8761, 405, 4541, 6766, 483, 2941, 6298, 5878, 5102, 1096, 5664, 6755, 586, 10921, 10037, 10749, 10533, 1446, 1662, 9112, 3790, 7364, 54, 4634, 1049, 11406, 441, 4811, 7143, 10566, 2853, 9448, 7785, 11381, 3938, 5726, 4997, 7680, 2449, 1444, 11970, 9141, 8427, 11139, 722, 11395, 4937, 12219, 10626, 2493, 8458, 2034, 5328, 366, 935, 9904, 2264, 11834, 1695, 12152, 12258, 5111, 4194, 6676, 7811, 11447, 2073, 2767, 2154, 1377, 3468, 4083, 7813, 12079, 9451, 11777, 11618, 6770, 10262, 1609, 1158, 10740, 4165, 1340, 9981, 4340, 5731, 5313, 3746, 10249, 7431, 4014, 7691, 6564, 587, 3675, 9650, 6680, 1934, 8571, 8522, 501, 4425, 8524, 7788, 2511, 4879, 1805, 279, 7522, 5912, 872, 10799, 7437, 4893, 2540, 8058, 10061, 6782, 2583, 2942, 9338, 2934, 8368, 10380, 6784, 11892, 10908, 6832, 5942, 1910, 6648, 4648, 5634, 11916, 11379, 8617, 1303, 8804, 262, 2999, 1729, 4475, 11102, 5360, 1879, 5551, 7764, 11472, 6990, 4438, 8824, 10934, 5333, 10903, 12020, 5807, 8070, 11514, 764, 350, 4651, 11933, 3192, 6508, 2679, 11179, 5934, 5862, 2389, 4929, 12127, 7534, 6259, 3837, 10847, 9613, 7612, 3813, 8407, 6347, 4599, 6846, 1177, 5376, 8757, 11896, 1293, 10232, 3008, 11996, 9557, 4754, 3270, 10705, 7359, 4135, 9781, 4182, 4065, 8255, 8616, 151, 2379, 11806, 9979, 9624, 6296, 4981, 8813, 11926, 9848, 12119, 5813, 4975, 4483, 10644, 2851, 8127, 8404, 9979, 6586, 1800, 5186, 6689, 11948, 1519, 6416, 6492, 9561, 9621, 9172, 1404, 10062, 4709, 3836, 806, 5329, 9013, 7146, 4434, 6881, 1115, 2707, 9491, 10420, 2911, 4599, 329, 4377, 9941, 4617, 3685, 1058, 373, 9393, 3636, 9068, 2254, 8113, 9411, 848, 4148, 6530, 5420, 2940, 7132, 6254, 10486, 4923, 8350, 1118, 1344, 1912, 3558, 2863, 2421, 6605, 9760, 1308, 4179, 10535, 10086, 9639, 1899, 6731, 4545, 6425, 7369, 8623, 264, 6670, 7476, 2818, 5601, 2361, 911, 6983, 11873, 6799, 6131, 9926, 7667, 9882, 6287, 3173, 225, 7166, 2088, 10329, 845, 7059, 10625, 12050, 3185, 2759, 1081, 1118, 10201, 746, 5674, 11334, 9024, 6896, 5963, 3274, 7121, 6, 6833, 3551, 1473, 11501, 5327, 9995, 4483, 5782, 11070, 8410, 2745, 3559, 7085, 5856, 1718, 6552, 9091, 1098, 11382]
// forgefmt: disable-next-line
uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
uint256[] memory pkc = new uint[](32);
for (uint256 i = 0; i < 32; i++) {
	pkc[i] = tmp_pkc[i];
}
// signature s2
// uncompressed s2 = [12160, 12201, 164, 11987, 12188, 12227, 156, 12250, 20, 61, 11980, 122, 187, 140, 12138, 12022, 70, 12211, 11992, 63, 12007, 125, 12121, 12195, 12185, 12075, 12285, 12232, 27, 12108, 75, 37, 202, 12268, 12187, 12087, 287, 12141, 12248, 12126, 12064, 124, 86, 12103, 12259, 12249, 147, 58, 12089, 12140, 99, 12066, 12, 12172, 11, 12223, 265, 12046, 122, 135, 180, 11721, 12232, 140, 312, 12198, 18, 12165, 12225, 12036, 38, 12132, 12223, 12051, 145, 12244, 103, 12287, 12166, 51, 12221, 12156, 12102, 99, 12112, 11940, 85, 12145, 12032, 12137, 12160, 143, 12264, 288, 172, 240, 11967, 85, 11, 25, 12159, 12228, 195, 157, 12084, 12250, 11823, 42, 12168, 12247, 12173, 115, 12277, 79, 39, 35, 38, 53, 156, 12087, 12114, 12169, 12284, 87, 12213, 210, 113, 12194, 7, 34, 35, 12209, 12123, 12214, 11973, 140, 12287, 322, 12237, 12094, 216, 103, 160, 12244, 12114, 123, 12210, 12074, 68, 12191, 12277, 177, 81, 12216, 127, 11868, 12194, 294, 17, 28, 159, 12148, 11988, 12216, 12257, 100, 12076, 12189, 226, 211, 23, 12127, 70, 136, 12124, 111, 132, 12280, 389, 297, 12112, 24, 174, 12192, 4, 53, 12251, 33, 11968, 38, 41, 12255, 12230, 3, 213, 172, 140, 12071, 219, 72, 12260, 12258, 185, 12153, 170, 12247, 43, 58, 12047, 12003, 12259, 259, 270, 343, 175, 77, 322, 12078, 148, 12283, 12094, 96, 167, 12233, 155, 12209, 11972, 12013, 186, 100, 12000, 12144, 12053, 143, 171, 102, 139, 12053, 264, 245, 12075, 354, 12055, 105, 12225, 134, 268, 48, 12239, 12172, 94, 12061, 12140, 12154, 12235, 252, 31, 12068, 39, 12221, 135, 12120, 55, 9, 99, 12136, 12005, 20, 12200, 12144, 12204, 316, 134, 12117, 12188, 12143, 131, 12248, 97, 61, 122, 64, 117, 218, 65, 63, 12038, 12202, 12030, 25, 12232, 12242, 27, 312, 12272, 12263, 12194, 350, 90, 349, 12045, 11891, 12205, 12127, 99, 12241, 12205, 12108, 12133, 12054, 10, 232, 12163, 12184, 12206, 12260, 12248, 11996, 12281, 89, 74, 252, 12225, 102, 240, 12116, 12172, 12284, 12279, 12121, 357, 235, 356, 144, 3, 170, 237, 12225, 12156, 182, 28, 44, 12283, 63, 12183, 171, 172, 74, 198, 12160, 12265, 12212, 12022, 12168, 12256, 136, 72, 11870, 27, 12075, 12236, 12167, 12145, 12181, 11908, 12216, 242, 184, 320, 8, 12215, 11973, 11950, 12225, 12005, 12186, 154, 8, 285, 12169, 104, 16, 26, 178, 221, 229, 91, 11953, 12166, 12210, 282, 189, 107, 124, 101, 7, 12281, 89, 191, 12252, 12244, 12238, 12041, 150, 12200, 82, 11988, 134, 12082, 264, 12235, 95, 71, 157, 65, 250, 123, 12119, 12275, 291, 132, 11978, 118, 12250, 12072, 12282, 12175, 181, 12200, 264, 12194, 21, 12058, 12135, 2, 250, 12232, 156, 94, 561, 12227, 12064, 285, 148, 171, 155, 99, 182, 12205, 12124, 12132, 12050, 49, 56, 12101, 145, 12148, 44, 62, 311, 12240, 195, 49, 12076, 11981, 12153, 325, 22, 14, 12, 12254, 17, 249, 12245, 29, 12213, 87, 58, 86, 12251, 54, 12165, 55, 30, 11981, 387, 4, 89, 12191, 255, 40, 12183, 12143, 12071, 2, 389, 12257, 46, 12231, 12166, 12015, 12181, 9, 72, 11972, 49, 258, 11959, 230, 12194, 12251, 12235]
// forgefmt: disable-next-line
uint256[32] memory tmp_s2 = [21241362652655976118052199738235297379325563254953854226625614987286433836928, 65375368373742722157214948405964137758857493268308077350612892612857888838, 102481097908329645066155600388496319418636965790880552454770268435699728586, 247688367958347251749337001357579512481367309409638275407838209986886643513, 90437200069429427158125921095192088302333716993587210639485685234093392184, 424047932776192299526560151220007938706815957277540503843124559375880695741, 203515600918493380796458559261420530038350127902910870552738821966457548479, 21544936154468057554472235014038110957842133360011428144959465728071147925493, 21633279774780377574883650596281968455988710509682201138221100532534706569223, 49472176253909231867607541964089578932099198737062887170875549484748320594, 196446886639740790448194920598584231368088948356772786367850759287685251231, 21652711884232620729870841695058715550814755646364260060029427447644326199428, 102478294072977625242866455938561081240915409755611054537591354703233626054, 21613844645784636943769898634608591714818373956639699433812510071175034121999, 432884653254941768391848914039078205182145686042362242005180489164058067099, 445575320271567241723645307060722568272703664212263426657696326372162678571, 558652696654923771226662552998569869429154917463958753161753922288706912287, 21559392428289741853787546523632316279010843902692564740108831950166325264518, 21426883405608288618915788387342588926353781352336830399197796994299383590654, 157580488805240532862876267216340492303932205674101754885598981813739520099, 300364081951405736215370224586136005544499828457697163782835287578010976330, 21577067023821837132598008687985064695490659146733394035889456955906746024173, 325106389251761834051311048554344431656621434269107927599198160367009672950, 314499478495748428795885977186008766550868094190669122231985676789937078592, 21647415387051267797314241493180087533922137770971668710580416218381840351453, 441713518655715946745608651902942524707662664110049614148065830299300147156, 37432538058685187264630883247500900822459919514017619833093053468466675835, 321568834888150370892269302975636918525760523818370138911536123960250281754, 21336446475381451033353688457872494954546813289576818032761776234254351216557, 21645645709179260160038781534411079709429751031465681914748658212864096022221, 687303567084482440378524283164525564580336229696693382039363140995221094454, 21617704128886473622812310158531905399220067085899824499312662204774429372385];
uint256[] memory s2 = new uint256[](32);
for (uint i = 0; i < 32; i++) {
	s2[i] = tmp_s2[i];
}
// message = "\x4d\x79\x20\x6e\x61\x6d\x65\x20\x69\x73\x20\x53\x69\x6d\x6f\x6e\x20\x61\x6c\x73\x6f\x20\x66\x72\x6f\x6d\x20\x5a\x4b\x4e\x4f\x58"
// salt = "\x91\x89\x90\xff\x93\xe0\x65\x6b\x5f\x75\xb0\x87\x29\xc6\x0e\x6a\x9d\x73\x52\xb9\xef\xd2\xe3\x3e\x3d\x1b\xa6\xe6\xd8\x9e\xdf\xa6\x71\x26\x6e\xce\x6b\xe7\xbb\x5a"
// hash to point
// forgefmt: disable-next-line
uint256[512] memory _hashed = [uint256(8668), 6034, 149, 11927, 10413, 3126, 1483, 9464, 11306, 11359, 1936, 6938, 4155, 10730, 7772, 7697, 5700, 7052, 1609, 4133, 7462, 9785, 8770, 11472, 3770, 10781, 8232, 10414, 1450, 379, 9696, 11306, 7939, 1355, 3759, 8118, 6831, 3944, 1240, 4987, 9868, 9445, 9274, 11750, 5728, 9169, 7984, 11138, 2944, 10794, 3863, 1799, 4571, 6812, 8364, 9616, 3282, 5732, 8260, 9136, 3008, 583, 9850, 8996, 6401, 9584, 3133, 5045, 471, 11517, 10957, 4904, 12095, 10123, 9726, 91, 7274, 5381, 9944, 7131, 6480, 5232, 1428, 7308, 9271, 3532, 2004, 9256, 3729, 4260, 2940, 9538, 2181, 9621, 8298, 5852, 5406, 12135, 7224, 11171, 10783, 825, 3748, 4091, 1025, 2647, 2485, 9356, 6589, 3369, 11671, 491, 6634, 9641, 4994, 2375, 8224, 1609, 2744, 9269, 4369, 6541, 1355, 862, 10781, 11709, 4889, 6657, 1107, 8549, 8072, 10963, 5019, 895, 8696, 8105, 5332, 9195, 407, 2467, 757, 9477, 11779, 1864, 5076, 8393, 9737, 913, 8264, 4122, 4445, 7003, 3874, 11402, 2352, 4296, 7228, 11300, 10408, 2351, 1803, 10406, 10393, 207, 21, 9476, 11884, 6066, 4869, 864, 5402, 3681, 2565, 2219, 7191, 3529, 4020, 11749, 6680, 9564, 7795, 5093, 3136, 10133, 8148, 8834, 7855, 4654, 816, 4486, 2209, 9207, 9791, 10109, 120, 8013, 11783, 5568, 9294, 8122, 11447, 10046, 10998, 6514, 5983, 2867, 631, 3625, 2508, 2843, 9212, 8794, 3118, 11123, 8191, 477, 11622, 11849, 565, 1276, 484, 5133, 2314, 9326, 3289, 4436, 2954, 4545, 8962, 8928, 7929, 2327, 237, 820, 4529, 9115, 9005, 5181, 8442, 4239, 3616, 9542, 9615, 11935, 10976, 8712, 9164, 4050, 5710, 3054, 3623, 11330, 9220, 886, 3150, 2832, 9855, 3609, 10773, 3382, 6772, 246, 5284, 8109, 4284, 1797, 1965, 3483, 155, 645, 6255, 5090, 8587, 3801, 10001, 3109, 4092, 5647, 7637, 11416, 3441, 8720, 5364, 3791, 12036, 1005, 7637, 328, 4723, 482, 3843, 6640, 5428, 12213, 7884, 11905, 3467, 6744, 7985, 9871, 7949, 5302, 6271, 11078, 3142, 10311, 2946, 11796, 1676, 7890, 3920, 5647, 3318, 4353, 8849, 4087, 9745, 6964, 1019, 1515, 905, 1810, 1508, 9380, 174, 11227, 3395, 5621, 12127, 4083, 1675, 4178, 10404, 1195, 1505, 7738, 11880, 3503, 7034, 8226, 7028, 3078, 5763, 5327, 4807, 6131, 1288, 8872, 6275, 3035, 6778, 6240, 9391, 11907, 2768, 9385, 5827, 5417, 5827, 7310, 5644, 1334, 7577, 12162, 2078, 9492, 3023, 5478, 4170, 7034, 2196, 4723, 10478, 7215, 5435, 9588, 6740, 8019, 714, 3090, 9995, 9560, 7992, 4523, 8032, 48, 10743, 8719, 8465, 6447, 1565, 8075, 6419, 5102, 9807, 567, 679, 10945, 9038, 6440, 9337, 5029, 4212, 3346, 6402, 2476, 5011, 7181, 1705, 9179, 1566, 6925, 9235, 1095, 9595, 4717, 6218, 567, 6274, 7672, 1204, 5196, 6845, 6998, 3138, 1057, 6079, 6323, 5933, 9508, 11812, 6722, 710, 7614, 2707, 8153, 5076, 11483, 1460, 4314, 2612, 7925, 7459, 10936, 6872, 9717, 7045, 420, 10451, 11326, 5935, 7138, 10288, 10874, 12001, 6036, 10366, 11033, 1010, 2398, 11554, 7665, 7562, 1924, 4580, 4523, 11016, 5851, 8169, 5864, 8629, 4463, 1925, 1609, 3637, 9583, 3413, 7415, 2955, 11040, 11931, 5878, 8721, 5717, 5321, 7110, 7348, 10116, 8810, 7814, 2786, 5090, 7155, 3963, 10690, 10201, 10421, 76, 2535, 10081, 2650, 4543, 5211, 10369, 1667, 7674, 2371, 1581, 5044, 11948, 5474, 11812];
uint256[] memory hashed = new uint256[](512);
for (uint i = 0; i < 512; i++) {
	hashed[i] = _hashed[i];
}
bool result = falcon_core(s2, pkc, hashed);
assertEq(true, result);}
function testVector2() public view {
// public key
// uncompressed pk = [10801, 4232, 5459, 11291, 11617, 6672, 3181, 7235, 6277, 11587, 9475, 3223, 6163, 1264, 1968, 3205, 3530, 3165, 4215, 125, 10423, 1623, 12148, 4735, 8393, 2401, 10147, 3362, 5998, 9467, 11765, 11191, 647, 11577, 7308, 11070, 1104, 555, 10204, 5072, 3692, 10621, 9638, 7684, 12265, 6089, 5831, 8267, 5236, 11342, 6111, 9831, 2028, 9056, 7227, 7048, 6882, 5545, 2282, 11026, 6177, 10346, 5574, 8968, 306, 10602, 3821, 8062, 1767, 2933, 11766, 5552, 5637, 1984, 9277, 183, 8288, 9427, 408, 3127, 9196, 4478, 12273, 3280, 11134, 10187, 1906, 7328, 9049, 8658, 10711, 6608, 8544, 2098, 5098, 8660, 9811, 11340, 1631, 11659, 10935, 10253, 1699, 5994, 1241, 6277, 10575, 7252, 6909, 6378, 699, 10683, 6056, 3937, 6060, 2623, 7878, 3611, 4124, 11905, 292, 6034, 5088, 6201, 11979, 8945, 8153, 6703, 9255, 6899, 7748, 4666, 1047, 2071, 6781, 1738, 12048, 9437, 9322, 9433, 11963, 949, 10369, 4765, 4392, 10006, 3291, 11138, 5256, 3971, 5289, 5168, 7870, 11141, 4678, 2951, 337, 1613, 434, 10382, 4103, 3083, 4420, 10700, 5760, 8761, 405, 4541, 6766, 483, 2941, 6298, 5878, 5102, 1096, 5664, 6755, 586, 10921, 10037, 10749, 10533, 1446, 1662, 9112, 3790, 7364, 54, 4634, 1049, 11406, 441, 4811, 7143, 10566, 2853, 9448, 7785, 11381, 3938, 5726, 4997, 7680, 2449, 1444, 11970, 9141, 8427, 11139, 722, 11395, 4937, 12219, 10626, 2493, 8458, 2034, 5328, 366, 935, 9904, 2264, 11834, 1695, 12152, 12258, 5111, 4194, 6676, 7811, 11447, 2073, 2767, 2154, 1377, 3468, 4083, 7813, 12079, 9451, 11777, 11618, 6770, 10262, 1609, 1158, 10740, 4165, 1340, 9981, 4340, 5731, 5313, 3746, 10249, 7431, 4014, 7691, 6564, 587, 3675, 9650, 6680, 1934, 8571, 8522, 501, 4425, 8524, 7788, 2511, 4879, 1805, 279, 7522, 5912, 872, 10799, 7437, 4893, 2540, 8058, 10061, 6782, 2583, 2942, 9338, 2934, 8368, 10380, 6784, 11892, 10908, 6832, 5942, 1910, 6648, 4648, 5634, 11916, 11379, 8617, 1303, 8804, 262, 2999, 1729, 4475, 11102, 5360, 1879, 5551, 7764, 11472, 6990, 4438, 8824, 10934, 5333, 10903, 12020, 5807, 8070, 11514, 764, 350, 4651, 11933, 3192, 6508, 2679, 11179, 5934, 5862, 2389, 4929, 12127, 7534, 6259, 3837, 10847, 9613, 7612, 3813, 8407, 6347, 4599, 6846, 1177, 5376, 8757, 11896, 1293, 10232, 3008, 11996, 9557, 4754, 3270, 10705, 7359, 4135, 9781, 4182, 4065, 8255, 8616, 151, 2379, 11806, 9979, 9624, 6296, 4981, 8813, 11926, 9848, 12119, 5813, 4975, 4483, 10644, 2851, 8127, 8404, 9979, 6586, 1800, 5186, 6689, 11948, 1519, 6416, 6492, 9561, 9621, 9172, 1404, 10062, 4709, 3836, 806, 5329, 9013, 7146, 4434, 6881, 1115, 2707, 9491, 10420, 2911, 4599, 329, 4377, 9941, 4617, 3685, 1058, 373, 9393, 3636, 9068, 2254, 8113, 9411, 848, 4148, 6530, 5420, 2940, 7132, 6254, 10486, 4923, 8350, 1118, 1344, 1912, 3558, 2863, 2421, 6605, 9760, 1308, 4179, 10535, 10086, 9639, 1899, 6731, 4545, 6425, 7369, 8623, 264, 6670, 7476, 2818, 5601, 2361, 911, 6983, 11873, 6799, 6131, 9926, 7667, 9882, 6287, 3173, 225, 7166, 2088, 10329, 845, 7059, 10625, 12050, 3185, 2759, 1081, 1118, 10201, 746, 5674, 11334, 9024, 6896, 5963, 3274, 7121, 6, 6833, 3551, 1473, 11501, 5327, 9995, 4483, 5782, 11070, 8410, 2745, 3559, 7085, 5856, 1718, 6552, 9091, 1098, 11382]
// forgefmt: disable-next-line
uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
uint256[] memory pkc = new uint[](32);
for (uint256 i = 0; i < 32; i++) {
	pkc[i] = tmp_pkc[i];
}
// signature s2
// uncompressed s2 = [12015, 22, 119, 12188, 12245, 160, 277, 12106, 12130, 11976, 96, 12285, 15, 12233, 12231, 248, 12262, 12214, 339, 12267, 11810, 12251, 132, 12061, 223, 90, 364, 178, 12133, 12211, 12033, 12047, 12063, 14, 12263, 12100, 12176, 1, 12102, 128, 12288, 12279, 170, 33, 10, 12128, 244, 12256, 191, 191, 12212, 32, 152, 12199, 93, 122, 283, 12184, 12230, 12154, 78, 12248, 119, 12165, 127, 12147, 12009, 12149, 12092, 12013, 302, 165, 10, 0, 12276, 180, 149, 12278, 105, 50, 12105, 12275, 12260, 12153, 183, 257, 12283, 123, 67, 12277, 12034, 122, 125, 90, 12265, 74, 34, 29, 65, 123, 12135, 12279, 84, 12197, 12268, 15, 139, 12100, 12189, 52, 11944, 100, 12211, 149, 89, 15, 11908, 198, 33, 12198, 63, 89, 15, 165, 100, 86, 140, 12164, 54, 12218, 12270, 40, 1, 12192, 12236, 99, 12175, 12009, 205, 228, 28, 12052, 18, 49, 12261, 440, 71, 53, 75, 55, 12278, 12210, 12207, 118, 14, 12217, 12216, 12195, 12276, 4, 12219, 370, 12021, 70, 12172, 320, 110, 12231, 36, 12258, 12071, 12222, 11908, 192, 31, 12276, 137, 39, 17, 126, 11943, 12266, 122, 11884, 168, 12258, 12223, 128, 137, 46, 167, 11967, 195, 12154, 49, 160, 15, 59, 16, 99, 12176, 107, 12044, 153, 62, 12135, 188, 12081, 208, 12164, 12157, 11939, 184, 50, 12221, 12097, 12252, 12270, 44, 12283, 12118, 49, 79, 12105, 50, 12262, 387, 12181, 21, 97, 12172, 12154, 179, 7, 177, 73, 12261, 339, 11842, 45, 12178, 12231, 86, 41, 212, 12260, 91, 12073, 122, 273, 118, 257, 4, 12198, 156, 11889, 12077, 12206, 12282, 12216, 179, 55, 12089, 201, 131, 88, 12153, 12204, 11919, 155, 12258, 40, 12163, 99, 12056, 12281, 46, 51, 126, 12096, 12133, 12188, 12278, 431, 34, 42, 110, 93, 84, 12077, 11971, 12273, 350, 11985, 12163, 127, 162, 51, 171, 97, 238, 143, 55, 106, 154, 11971, 12179, 12225, 11973, 12092, 5, 12225, 12256, 12168, 12107, 12035, 124, 282, 29, 148, 130, 12154, 167, 144, 12278, 32, 12195, 38, 132, 209, 14, 12251, 124, 13, 61, 12025, 79, 44, 219, 276, 62, 12131, 261, 12242, 208, 283, 12045, 258, 35, 12220, 168, 257, 191, 12236, 12182, 12243, 117, 94, 130, 12287, 12220, 298, 77, 11969, 155, 12219, 12157, 346, 12233, 12270, 160, 12, 397, 12181, 11926, 12282, 28, 49, 12279, 12155, 24, 12284, 446, 136, 12187, 12187, 39, 184, 145, 148, 12084, 12121, 12238, 12186, 33, 54, 153, 12191, 12189, 20, 57, 303, 67, 234, 127, 289, 12193, 12213, 59, 43, 38, 152, 61, 100, 12156, 12263, 11912, 12155, 241, 61, 241, 87, 12198, 12031, 12074, 12182, 134, 80, 44, 12167, 12086, 163, 11919, 12286, 153, 207, 71, 12058, 11981, 223, 12109, 12201, 54, 12176, 51, 168, 114, 187, 38, 12187, 12126, 44, 12238, 70, 35, 32, 298, 12206, 11993, 196, 585, 38, 95, 12240, 69, 12227, 12284, 405, 84, 11813, 12125, 108, 4, 399, 51, 12189, 222, 185, 12043, 87, 12247, 130, 12234, 238, 12068, 39, 47, 76, 12261, 12196, 12135, 87, 12149, 99, 136, 14, 330, 12259, 12108, 11927, 83, 98, 109, 12233, 23, 12050, 12155, 12080, 22, 64, 21, 12103]
// forgefmt: disable-next-line
uint256[32] memory tmp_s2 = [438507824205089640972760134708744414131363728097035375280221786930953989871, 21285531003446832039593350956309507404085976633276150144249225140095877001190, 21654484209140035008701079162319714036350315974988936192439258742687414497055, 21493697756301234205602557722819002073332163434913530721422544674252713296063, 88345189084196441299202350312682907469442054353667466318248683090904023167, 131077346576497680175392531762192866255282984175791557170003612825933786953, 177006716102298952197215515631230931816430713019631598176121733059394207778, 21491931470392179361849185403183070056916891995365675302296865598533866434483, 86575996411086247850578638715646469170490957207456164809716582462443356214, 7398353581208179950435073878422066241340503694215074625095688495868424165, 21689815403056851679283929301754067295214816133186441796304032186346809470907, 21143863326532942848664576346776875000654350068162263188314303230970255835273, 21345284463049684349984287019173520463422360918611039194855655206364930244803, 21387685848998362512428851950109303451524118142198859295186751114531630743760, 79827377742993167492038892082717440190645404876377345389651954053190910002, 21006048963919857542599672603573653077137398723952501488716014217733555564434, 71004357681219425266644471709000361195628839513403616653375518986849890093, 164319742635801140536255290751507782101535469123595404086134158614306434947, 187287271722403714104755383936057917871433727111616801971907291637556772948, 261494147541663078951383973690473085947874121977953679057550398098029871258, 21246337598522166928773501728619367925035026120158260495005960491691459346562, 454084229946101496349967253456717555131110851464142760327341749176413978703, 611656841511559548937930402449138048059535223414169511081415155544404787391, 240303229999418465356777938309266894947834199388312950338715723097367785417, 35665561100581060717566596353455697854370455026470916878328177684907765659, 21667173280530150913708115996663455508682318479996563194373799457807756361785, 288321914479509591786553347721489190427807492267754991197069668241054051976, 330403474616589437510921568961998693717377268851210253236470113529092779663, 21626210634097993538828199159505421597095588352221066395609467058618145374246, 154040373349537912288959426491500243007795112158426691995424018007345791045, 24739525500446611412211982150199363983364193566776689684469048908890386391, 21384150591197993763280514712855187768498395264345193953194445250749291233610];
uint256[] memory s2 = new uint256[](32);
for (uint i = 0; i < 32; i++) {
	s2[i] = tmp_s2[i];
}
// message = "\x4d\x79\x20\x6e\x61\x6d\x65\x20\x69\x73\x20\x4e\x69\x63\x6f\x6c\x61\x73\x20\x66\x72\x6f\x6d\x20\x5a\x4b\x4e\x4f\x58\x74\x6f\x6f"
// salt = "\x13\x57\x9b\x4e\xf5\xf6\xb6\x42\x65\x63\xd7\x19\x5b\x8c\x5b\x84\x73\x6b\x14\x26\x61\x60\x34\x2c\x40\x93\xf8\xab\xea\x48\x37\x1b\xa9\x4c\xc0\x6d\xcb\x6b\x8a\x8e"
// hash to point
// forgefmt: disable-next-line
uint256[512] memory _hashed = [uint256(6721), 3247, 7310, 11503, 10250, 4318, 3996, 12223, 9975, 1243, 1784, 7199, 3197, 1723, 11885, 7210, 5386, 2084, 6005, 11675, 3311, 2945, 682, 5438, 12036, 6667, 6257, 6055, 307, 3281, 6370, 10887, 6049, 8716, 9451, 9412, 5532, 6558, 1600, 196, 10810, 5144, 6736, 1, 2683, 3729, 7995, 7449, 1577, 966, 3624, 7021, 6578, 3673, 4876, 11823, 9929, 8874, 2893, 2690, 7115, 11770, 6521, 8073, 2226, 343, 4303, 116, 2916, 4710, 1350, 8123, 36, 8632, 8191, 7478, 4478, 426, 5055, 81, 1281, 9178, 7093, 9419, 11445, 2313, 3092, 10929, 4751, 9174, 1237, 11430, 10705, 8821, 7496, 10401, 4580, 5151, 10253, 6058, 4898, 8056, 8559, 5316, 8682, 8190, 2059, 11631, 6751, 7203, 3906, 4347, 909, 4753, 9775, 3762, 3834, 9650, 9092, 6158, 7566, 7225, 286, 8011, 1282, 3499, 4362, 4758, 3885, 5881, 5435, 5827, 12234, 1501, 9869, 1247, 6330, 9420, 8025, 3205, 30, 4985, 7901, 1724, 5385, 10711, 3687, 5751, 9381, 7944, 5565, 2212, 9141, 7262, 2082, 4498, 1621, 11129, 5938, 10840, 5730, 650, 741, 6812, 5609, 4432, 10980, 2492, 4760, 5508, 1672, 4400, 977, 6216, 10929, 2829, 11312, 7335, 6001, 4766, 253, 2640, 3596, 10636, 1760, 12252, 11945, 7636, 1948, 7970, 6784, 11333, 2875, 390, 2405, 641, 3318, 9382, 4521, 2118, 287, 6138, 2191, 11968, 2019, 11863, 8538, 1120, 8921, 5147, 3477, 10474, 7488, 9288, 11523, 2252, 11976, 969, 5798, 3487, 7467, 4600, 11387, 4724, 9174, 10568, 5552, 7198, 10516, 7478, 7670, 10825, 11113, 10579, 6976, 9005, 8701, 7325, 10634, 9395, 12231, 4355, 8119, 3889, 11873, 5711, 3228, 2961, 7150, 4936, 6421, 5658, 5190, 7550, 2641, 9822, 7957, 4640, 9761, 7102, 9616, 4126, 3557, 4988, 10468, 7512, 1459, 11090, 2248, 8719, 3287, 8872, 2106, 1416, 3866, 8198, 6535, 1403, 7180, 552, 10465, 11866, 3679, 4598, 10081, 11093, 7502, 1084, 10875, 9158, 7012, 3988, 8297, 11323, 3611, 5701, 9703, 4666, 327, 708, 10060, 10426, 5307, 7332, 5073, 12110, 2551, 10344, 5897, 5674, 2339, 4850, 2837, 6188, 8702, 2038, 7936, 7160, 6579, 7152, 271, 3654, 9129, 11552, 1211, 2692, 10599, 209, 8243, 11731, 11158, 5507, 11944, 2252, 7668, 9910, 2324, 1140, 11716, 5621, 8022, 7464, 10425, 8906, 792, 1470, 10614, 7808, 9325, 9680, 966, 2330, 10141, 1411, 9106, 4154, 3078, 9635, 1589, 6578, 3814, 3645, 12064, 1805, 4601, 2155, 336, 3756, 6048, 10250, 4688, 2726, 9763, 8260, 8050, 5955, 4760, 7373, 5525, 9921, 11191, 1468, 12021, 10154, 7376, 12040, 9895, 7205, 12021, 9561, 4946, 2531, 3971, 7705, 1794, 5663, 3750, 7161, 5313, 9160, 11165, 1952, 8514, 9092, 10730, 6196, 9590, 8404, 4114, 5000, 6733, 904, 9962, 10160, 10482, 63, 4047, 5729, 7490, 4078, 2940, 4779, 8420, 5763, 3498, 379, 11653, 5846, 6378, 2436, 6034, 10187, 2120, 10408, 3836, 1930, 6968, 11054, 1492, 10941, 4138, 6613, 8777, 1924, 3899, 1559, 11374, 9201, 9887, 5065, 11075, 7157, 11248, 9373, 3117, 5158, 3825, 6527, 1053, 1933, 10620, 8337, 9954, 2220, 2001, 5392, 701, 8914, 1513, 1032, 9120, 8057, 5986, 9076, 12024, 6799, 1138, 11320, 8691, 8404, 5307, 1897, 2490, 8077, 6553, 7734, 7824, 6734, 7124, 10666, 9571, 9172, 1550, 1459, 2492, 6408, 8237, 6396, 1340, 2622, 10670, 6061, 12021, 5320, 1072, 821, 3037, 6270, 7172, 1649, 1620, 3196];
uint256[] memory hashed = new uint256[](512);
for (uint i = 0; i < 512; i++) {
	hashed[i] = _hashed[i];
}
bool result = falcon_core(s2, pkc, hashed);
assertEq(true, result);}
function testVector3() public view {
// public key
// uncompressed pk = [10801, 4232, 5459, 11291, 11617, 6672, 3181, 7235, 6277, 11587, 9475, 3223, 6163, 1264, 1968, 3205, 3530, 3165, 4215, 125, 10423, 1623, 12148, 4735, 8393, 2401, 10147, 3362, 5998, 9467, 11765, 11191, 647, 11577, 7308, 11070, 1104, 555, 10204, 5072, 3692, 10621, 9638, 7684, 12265, 6089, 5831, 8267, 5236, 11342, 6111, 9831, 2028, 9056, 7227, 7048, 6882, 5545, 2282, 11026, 6177, 10346, 5574, 8968, 306, 10602, 3821, 8062, 1767, 2933, 11766, 5552, 5637, 1984, 9277, 183, 8288, 9427, 408, 3127, 9196, 4478, 12273, 3280, 11134, 10187, 1906, 7328, 9049, 8658, 10711, 6608, 8544, 2098, 5098, 8660, 9811, 11340, 1631, 11659, 10935, 10253, 1699, 5994, 1241, 6277, 10575, 7252, 6909, 6378, 699, 10683, 6056, 3937, 6060, 2623, 7878, 3611, 4124, 11905, 292, 6034, 5088, 6201, 11979, 8945, 8153, 6703, 9255, 6899, 7748, 4666, 1047, 2071, 6781, 1738, 12048, 9437, 9322, 9433, 11963, 949, 10369, 4765, 4392, 10006, 3291, 11138, 5256, 3971, 5289, 5168, 7870, 11141, 4678, 2951, 337, 1613, 434, 10382, 4103, 3083, 4420, 10700, 5760, 8761, 405, 4541, 6766, 483, 2941, 6298, 5878, 5102, 1096, 5664, 6755, 586, 10921, 10037, 10749, 10533, 1446, 1662, 9112, 3790, 7364, 54, 4634, 1049, 11406, 441, 4811, 7143, 10566, 2853, 9448, 7785, 11381, 3938, 5726, 4997, 7680, 2449, 1444, 11970, 9141, 8427, 11139, 722, 11395, 4937, 12219, 10626, 2493, 8458, 2034, 5328, 366, 935, 9904, 2264, 11834, 1695, 12152, 12258, 5111, 4194, 6676, 7811, 11447, 2073, 2767, 2154, 1377, 3468, 4083, 7813, 12079, 9451, 11777, 11618, 6770, 10262, 1609, 1158, 10740, 4165, 1340, 9981, 4340, 5731, 5313, 3746, 10249, 7431, 4014, 7691, 6564, 587, 3675, 9650, 6680, 1934, 8571, 8522, 501, 4425, 8524, 7788, 2511, 4879, 1805, 279, 7522, 5912, 872, 10799, 7437, 4893, 2540, 8058, 10061, 6782, 2583, 2942, 9338, 2934, 8368, 10380, 6784, 11892, 10908, 6832, 5942, 1910, 6648, 4648, 5634, 11916, 11379, 8617, 1303, 8804, 262, 2999, 1729, 4475, 11102, 5360, 1879, 5551, 7764, 11472, 6990, 4438, 8824, 10934, 5333, 10903, 12020, 5807, 8070, 11514, 764, 350, 4651, 11933, 3192, 6508, 2679, 11179, 5934, 5862, 2389, 4929, 12127, 7534, 6259, 3837, 10847, 9613, 7612, 3813, 8407, 6347, 4599, 6846, 1177, 5376, 8757, 11896, 1293, 10232, 3008, 11996, 9557, 4754, 3270, 10705, 7359, 4135, 9781, 4182, 4065, 8255, 8616, 151, 2379, 11806, 9979, 9624, 6296, 4981, 8813, 11926, 9848, 12119, 5813, 4975, 4483, 10644, 2851, 8127, 8404, 9979, 6586, 1800, 5186, 6689, 11948, 1519, 6416, 6492, 9561, 9621, 9172, 1404, 10062, 4709, 3836, 806, 5329, 9013, 7146, 4434, 6881, 1115, 2707, 9491, 10420, 2911, 4599, 329, 4377, 9941, 4617, 3685, 1058, 373, 9393, 3636, 9068, 2254, 8113, 9411, 848, 4148, 6530, 5420, 2940, 7132, 6254, 10486, 4923, 8350, 1118, 1344, 1912, 3558, 2863, 2421, 6605, 9760, 1308, 4179, 10535, 10086, 9639, 1899, 6731, 4545, 6425, 7369, 8623, 264, 6670, 7476, 2818, 5601, 2361, 911, 6983, 11873, 6799, 6131, 9926, 7667, 9882, 6287, 3173, 225, 7166, 2088, 10329, 845, 7059, 10625, 12050, 3185, 2759, 1081, 1118, 10201, 746, 5674, 11334, 9024, 6896, 5963, 3274, 7121, 6, 6833, 3551, 1473, 11501, 5327, 9995, 4483, 5782, 11070, 8410, 2745, 3559, 7085, 5856, 1718, 6552, 9091, 1098, 11382]
// forgefmt: disable-next-line
uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
uint256[] memory pkc = new uint[](32);
for (uint256 i = 0; i < 32; i++) {
	pkc[i] = tmp_pkc[i];
}
// signature s2
// uncompressed s2 = [12253, 11960, 12224, 12230, 74, 155, 12022, 55, 32, 12242, 12179, 12069, 12254, 105, 176, 12254, 12189, 33, 35, 88, 12094, 390, 404, 12236, 302, 12279, 12259, 106, 51, 166, 12239, 12072, 12253, 11, 12253, 190, 68, 100, 429, 12103, 12150, 207, 24, 41, 12013, 135, 185, 12147, 34, 12162, 12225, 12255, 224, 181, 232, 99, 12153, 12130, 12256, 12270, 156, 12183, 12190, 12139, 12157, 12235, 562, 193, 118, 11980, 301, 90, 19, 269, 12072, 90, 79, 12126, 12152, 12210, 105, 44, 12105, 12245, 114, 12156, 31, 157, 12038, 61, 12237, 93, 12241, 12263, 193, 118, 51, 12143, 190, 456, 141, 160, 51, 12130, 12022, 6, 11908, 12192, 55, 88, 3, 12076, 12164, 12238, 8, 307, 12233, 12099, 15, 12111, 242, 12029, 12161, 12047, 12103, 274, 321, 54, 54, 12100, 72, 12196, 12089, 12194, 12133, 330, 12062, 12231, 169, 166, 12241, 445, 12263, 12042, 93, 12186, 12196, 35, 12075, 12096, 12072, 192, 5, 12129, 114, 26, 12266, 120, 12227, 126, 257, 12101, 12255, 12159, 12139, 12158, 67, 81, 29, 12167, 12137, 12283, 11973, 12259, 12285, 12174, 12199, 3, 171, 12184, 283, 54, 12159, 151, 12272, 64, 12280, 57, 35, 161, 190, 12016, 39, 12210, 97, 12134, 12061, 12142, 61, 0, 11974, 28, 30, 12245, 12159, 4, 12088, 12107, 12025, 11951, 157, 44, 12170, 12241, 352, 189, 12240, 12148, 11893, 127, 71, 12121, 12270, 104, 67, 238, 58, 11, 12188, 35, 43, 12208, 118, 102, 12189, 12267, 119, 184, 12055, 12177, 212, 40, 87, 12231, 12139, 108, 12164, 199, 17, 80, 12209, 12256, 12186, 12225, 108, 110, 14, 12257, 88, 215, 44, 245, 78, 12105, 266, 37, 12224, 12268, 78, 90, 12188, 12104, 313, 88, 50, 12286, 1, 12107, 12206, 12122, 12027, 103, 289, 63, 187, 12288, 133, 12033, 12270, 11897, 20, 66, 12144, 12192, 11, 12163, 12198, 12101, 12182, 130, 268, 91, 440, 100, 91, 149, 12122, 12174, 12040, 156, 187, 282, 355, 171, 12276, 424, 17, 12236, 12183, 12172, 42, 12187, 119, 12238, 93, 12226, 12108, 12113, 12149, 12111, 12166, 47, 31, 231, 59, 154, 12288, 12181, 283, 12226, 12082, 12106, 69, 182, 171, 12166, 2, 12259, 9, 32, 12261, 12139, 12177, 223, 167, 11, 54, 12244, 12096, 12094, 229, 12180, 12083, 12287, 12171, 289, 141, 12200, 155, 12239, 26, 12137, 12225, 182, 165, 124, 54, 12198, 54, 12206, 12204, 12255, 77, 144, 12206, 12154, 52, 64, 12286, 12156, 235, 115, 144, 12226, 399, 22, 63, 173, 240, 88, 179, 12000, 12085, 12207, 248, 12287, 12068, 12059, 113, 12134, 12269, 176, 12155, 72, 128, 12116, 4, 50, 12179, 156, 12260, 12253, 71, 12278, 12084, 12, 12174, 12243, 155, 12207, 130, 89, 12233, 32, 7, 171, 12062, 12177, 45, 26, 187, 194, 77, 11953, 12250, 12105, 12160, 124, 28, 11943, 12101, 109, 12164, 94, 12271, 12077, 76, 214, 12276, 12141, 12153, 61, 204, 12096, 12084, 70, 12235, 65, 73, 8, 12272, 100, 12137, 12241, 118, 82, 12224, 25, 170, 12133, 12155, 12151, 100, 11991, 12061, 12145, 12282, 166, 118, 12194, 12134, 221, 11977, 12285, 41, 314, 111, 396, 12258, 12276, 12251, 12207, 12163, 12170, 12243, 12122, 76, 38, 12183, 12195, 116, 32]
// forgefmt: disable-next-line
uint256[32] memory tmp_s2 = [21650948676788206408616676865061874369357514273323295703176449768972042645469, 21329707728860203642681203613816952039377654493716079924808629148818339868573, 21461896283508779059953341713944897004528682723865672884771780213166886825949, 21448085166106476428974929805984002999594957567360103306882207036040584232994, 21573530283204319440205758420650077351168028205304493779377694947305461591933, 208493161958338545583065282645586504005166413428643258840717522583163764841, 21336445235179810612169260987868823133046066823476118613080379587682576039987, 95418395753705944245569286927238146525615718792237204036978270498968186756, 21276702964070422585158097434604232149622259925288830978111726636009808724022, 222952369479417808052277785113554472621447742038333554651672165772181504093, 21509927374599992022922680669793048770814841703785930581932056358464155615489, 21230439452833164641030680499996212239947872632341540063727044860461860466599, 21391543305108933424208980586531051995211164976735071923121292205229461340199, 184082898268848539135932891312320241270412338676644588650265429376970469113, 21515221710039152440085383355600880574430863747751685829614006623395600269379, 194356093829012125771853365325808205879888760843233078638268147712504889556, 21386245459944567500602771668037512929887473472448225551972338259898784612366, 21260474321206196542825715619530346936076943170172662056288561295455898042681, 176696568891808890194631255202747177623385740378002378688646651043936546798, 21506390930546338503529443465044092526605359604047860638631507704352309837915, 272096038707752631423548632940154510336907236738043123488698761691006697514, 21448087075264057404932834971019133857903875259511892949204072443259297017856, 21555537991767732993204997538959611880667152345823531433193404481213195825041, 254428058285471908470785315102648538821372771242736974212324977590676684955, 155489012158866404720540155613581104913519785611383402870236565887650508718, 21407122487757773312733376952626316216628330683905159910122619191305250537651, 157252898580012441844510532357548576072847784483988654228119714920964161540, 219416873963777270882660375444488109734525576563827612903536788998465793993, 21371787595413627180649517941533775844730683329243424198224942945893884559388, 21437160020157431621225638786832639269381421126105348093148465760808523411252, 554791088752057085206811108615865335091020820847149332673424207379078524795, 56542238443530181087990626603246316151923418550936693168929100171328618607];
uint256[] memory s2 = new uint256[](32);
for (uint i = 0; i < 32; i++) {
	s2[i] = tmp_s2[i];
}
// message = "\x57\x65\x20\x61\x72\x65\x20\x5a\x4b\x4e\x6f\x78\x2c\x20\x79\x6f\x75\x20\x61\x6c\x72\x65\x61\x64\x79\x20\x6b\x6e\x6f\x77\x21\x21"
// salt = "\x5a\x54\x83\x5f\x8b\x04\xd4\xc0\xb2\x96\x67\xba\xeb\x0c\x32\x58\x80\x9e\xe6\x98\xdb\xc0\x35\x36\xa1\xc9\x36\xc8\x11\xf6\xe6\xf6\x92\x10\xf5\x63\x20\x80\x06\x49"
// hash to point
// forgefmt: disable-next-line
uint256[512] memory _hashed = [uint256(1623), 243, 9282, 6009, 6456, 4182, 7702, 5685, 1947, 105, 9551, 5801, 10765, 10758, 6597, 707, 2549, 1437, 9050, 4054, 1727, 2736, 3844, 9325, 9028, 85, 1887, 9332, 995, 10462, 8224, 7502, 11301, 512, 1385, 11677, 10288, 5629, 1501, 6530, 10618, 9859, 11131, 7901, 4619, 3050, 2716, 1421, 7250, 12143, 9968, 10180, 7945, 7553, 9632, 1416, 10611, 1301, 2087, 11302, 7203, 12278, 1191, 3730, 8555, 11460, 5788, 1363, 1164, 8885, 4281, 9127, 10173, 4273, 10912, 3468, 10430, 2057, 1144, 9002, 5137, 12082, 8833, 10158, 888, 6774, 3520, 11002, 10382, 2451, 11505, 3968, 8632, 2848, 8179, 10300, 9520, 4616, 4087, 11209, 1308, 1977, 10705, 1160, 760, 12024, 8978, 913, 11325, 4715, 3474, 3844, 7123, 10892, 6, 519, 9895, 839, 11469, 957, 9181, 6361, 671, 1412, 8004, 2621, 11483, 750, 10097, 9213, 7700, 7188, 5389, 11252, 5300, 334, 6423, 2505, 7136, 5218, 1710, 8095, 4549, 7724, 4589, 4421, 10037, 9883, 5367, 8938, 5099, 4781, 5520, 10791, 8516, 5628, 8182, 7868, 3744, 11227, 4822, 1357, 4524, 5924, 10419, 6172, 12245, 1502, 10667, 10324, 611, 6045, 10987, 7814, 5233, 6619, 3450, 7892, 4671, 7688, 7134, 553, 10574, 3777, 241, 12263, 11435, 8082, 5465, 4196, 4902, 8319, 386, 10721, 9952, 7092, 5375, 8277, 1344, 3506, 4893, 6316, 5843, 3719, 2200, 9164, 9041, 11736, 8798, 1417, 203, 11132, 454, 5917, 492, 3563, 157, 5752, 6370, 2421, 5358, 8788, 3478, 3321, 8395, 6893, 5272, 9836, 4199, 6980, 7171, 818, 1239, 8238, 6380, 8591, 8591, 8682, 9770, 7271, 9585, 212, 10097, 4521, 6907, 651, 3397, 203, 3889, 10490, 4617, 10564, 11304, 2124, 7695, 2909, 10541, 1406, 8086, 5499, 11733, 6751, 4289, 9122, 5732, 535, 10402, 5021, 6219, 11406, 8014, 6017, 10020, 10073, 3500, 4742, 2817, 2162, 1577, 5482, 8887, 11531, 1311, 7127, 6023, 3276, 1874, 1634, 8961, 5869, 11665, 11972, 3656, 12133, 12177, 5438, 11883, 3627, 95, 8982, 7980, 11735, 2671, 6692, 6876, 10643, 10120, 6556, 3154, 1192, 8843, 3960, 2638, 11495, 71, 12149, 6796, 116, 2115, 9425, 11926, 5899, 673, 3001, 9626, 5854, 7015, 3562, 2834, 2749, 2467, 704, 4301, 10417, 10518, 8983, 5536, 1346, 919, 2282, 1782, 7719, 7693, 7683, 12051, 3209, 8207, 1535, 9918, 1090, 3639, 3663, 11719, 8819, 2265, 6192, 2551, 6726, 11991, 4971, 182, 1305, 11193, 2917, 956, 8568, 6396, 4035, 4653, 10634, 198, 11683, 4164, 3909, 5619, 11601, 10862, 742, 10553, 4180, 5055, 4065, 11580, 8615, 1863, 8532, 11595, 2847, 1877, 1427, 9924, 5855, 2571, 4045, 1630, 11999, 6655, 114, 8499, 9501, 460, 11412, 8397, 6004, 3292, 11251, 1056, 3349, 3528, 11295, 9070, 10745, 2149, 11567, 7135, 6864, 11554, 2682, 9182, 5405, 7317, 10311, 3534, 11158, 5035, 8378, 6645, 11069, 1543, 3421, 2906, 6867, 4823, 7491, 1270, 2184, 3647, 1781, 5688, 4355, 10885, 12108, 9784, 9594, 12166, 6817, 6113, 2009, 1597, 314, 4829, 5186, 4790, 6108, 11640, 5490, 6155, 7934, 12017, 4376, 889, 1676, 12281, 10951, 8778, 2178, 1642, 11850, 8300, 8210, 4093, 11901, 6729, 881, 7990, 6118, 1741, 12082, 11352, 9141, 3343, 10226, 6970, 11557, 9026, 7599, 3306, 2213, 3890, 10922, 9561, 5255, 10995, 5945, 6855, 7152, 2019, 9983, 2926, 1444, 1042, 1780, 3348, 1028, 10093, 7695, 514, 11361, 9438, 5131, 10781, 3486];
uint256[] memory hashed = new uint256[](512);
for (uint i = 0; i < 512; i++) {
	hashed[i] = _hashed[i];
}
bool result = falcon_core(s2, pkc, hashed);
assertEq(true, result);}
function testVector4() public view {
// public key
// uncompressed pk = [10801, 4232, 5459, 11291, 11617, 6672, 3181, 7235, 6277, 11587, 9475, 3223, 6163, 1264, 1968, 3205, 3530, 3165, 4215, 125, 10423, 1623, 12148, 4735, 8393, 2401, 10147, 3362, 5998, 9467, 11765, 11191, 647, 11577, 7308, 11070, 1104, 555, 10204, 5072, 3692, 10621, 9638, 7684, 12265, 6089, 5831, 8267, 5236, 11342, 6111, 9831, 2028, 9056, 7227, 7048, 6882, 5545, 2282, 11026, 6177, 10346, 5574, 8968, 306, 10602, 3821, 8062, 1767, 2933, 11766, 5552, 5637, 1984, 9277, 183, 8288, 9427, 408, 3127, 9196, 4478, 12273, 3280, 11134, 10187, 1906, 7328, 9049, 8658, 10711, 6608, 8544, 2098, 5098, 8660, 9811, 11340, 1631, 11659, 10935, 10253, 1699, 5994, 1241, 6277, 10575, 7252, 6909, 6378, 699, 10683, 6056, 3937, 6060, 2623, 7878, 3611, 4124, 11905, 292, 6034, 5088, 6201, 11979, 8945, 8153, 6703, 9255, 6899, 7748, 4666, 1047, 2071, 6781, 1738, 12048, 9437, 9322, 9433, 11963, 949, 10369, 4765, 4392, 10006, 3291, 11138, 5256, 3971, 5289, 5168, 7870, 11141, 4678, 2951, 337, 1613, 434, 10382, 4103, 3083, 4420, 10700, 5760, 8761, 405, 4541, 6766, 483, 2941, 6298, 5878, 5102, 1096, 5664, 6755, 586, 10921, 10037, 10749, 10533, 1446, 1662, 9112, 3790, 7364, 54, 4634, 1049, 11406, 441, 4811, 7143, 10566, 2853, 9448, 7785, 11381, 3938, 5726, 4997, 7680, 2449, 1444, 11970, 9141, 8427, 11139, 722, 11395, 4937, 12219, 10626, 2493, 8458, 2034, 5328, 366, 935, 9904, 2264, 11834, 1695, 12152, 12258, 5111, 4194, 6676, 7811, 11447, 2073, 2767, 2154, 1377, 3468, 4083, 7813, 12079, 9451, 11777, 11618, 6770, 10262, 1609, 1158, 10740, 4165, 1340, 9981, 4340, 5731, 5313, 3746, 10249, 7431, 4014, 7691, 6564, 587, 3675, 9650, 6680, 1934, 8571, 8522, 501, 4425, 8524, 7788, 2511, 4879, 1805, 279, 7522, 5912, 872, 10799, 7437, 4893, 2540, 8058, 10061, 6782, 2583, 2942, 9338, 2934, 8368, 10380, 6784, 11892, 10908, 6832, 5942, 1910, 6648, 4648, 5634, 11916, 11379, 8617, 1303, 8804, 262, 2999, 1729, 4475, 11102, 5360, 1879, 5551, 7764, 11472, 6990, 4438, 8824, 10934, 5333, 10903, 12020, 5807, 8070, 11514, 764, 350, 4651, 11933, 3192, 6508, 2679, 11179, 5934, 5862, 2389, 4929, 12127, 7534, 6259, 3837, 10847, 9613, 7612, 3813, 8407, 6347, 4599, 6846, 1177, 5376, 8757, 11896, 1293, 10232, 3008, 11996, 9557, 4754, 3270, 10705, 7359, 4135, 9781, 4182, 4065, 8255, 8616, 151, 2379, 11806, 9979, 9624, 6296, 4981, 8813, 11926, 9848, 12119, 5813, 4975, 4483, 10644, 2851, 8127, 8404, 9979, 6586, 1800, 5186, 6689, 11948, 1519, 6416, 6492, 9561, 9621, 9172, 1404, 10062, 4709, 3836, 806, 5329, 9013, 7146, 4434, 6881, 1115, 2707, 9491, 10420, 2911, 4599, 329, 4377, 9941, 4617, 3685, 1058, 373, 9393, 3636, 9068, 2254, 8113, 9411, 848, 4148, 6530, 5420, 2940, 7132, 6254, 10486, 4923, 8350, 1118, 1344, 1912, 3558, 2863, 2421, 6605, 9760, 1308, 4179, 10535, 10086, 9639, 1899, 6731, 4545, 6425, 7369, 8623, 264, 6670, 7476, 2818, 5601, 2361, 911, 6983, 11873, 6799, 6131, 9926, 7667, 9882, 6287, 3173, 225, 7166, 2088, 10329, 845, 7059, 10625, 12050, 3185, 2759, 1081, 1118, 10201, 746, 5674, 11334, 9024, 6896, 5963, 3274, 7121, 6, 6833, 3551, 1473, 11501, 5327, 9995, 4483, 5782, 11070, 8410, 2745, 3559, 7085, 5856, 1718, 6552, 9091, 1098, 11382]
// forgefmt: disable-next-line
uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
uint256[] memory pkc = new uint[](32);
for (uint256 i = 0; i < 32; i++) {
	pkc[i] = tmp_pkc[i];
}
// signature s2
// uncompressed s2 = [113, 12142, 12183, 1, 12211, 152, 12237, 91, 12257, 14, 69, 64, 12147, 17, 173, 12119, 12179, 12118, 112, 234, 11725, 147, 75, 12201, 46, 12214, 12091, 12167, 411, 172, 51, 531, 105, 144, 258, 12167, 34, 12055, 202, 12164, 18, 12120, 12259, 70, 12170, 12175, 40, 12252, 365, 12276, 12140, 12209, 16, 72, 12106, 12084, 125, 71, 12280, 214, 24, 12115, 12191, 12147, 12019, 38, 177, 130, 12252, 154, 106, 12240, 248, 192, 12262, 12218, 12092, 44, 183, 12187, 12132, 41, 245, 12088, 118, 35, 83, 114, 94, 132, 75, 12192, 242, 12146, 47, 12226, 81, 12276, 12108, 174, 11876, 15, 12283, 257, 11904, 83, 12065, 328, 42, 9, 425, 85, 12244, 8, 12183, 72, 98, 12127, 41, 12230, 480, 12208, 2, 110, 32, 198, 12225, 36, 12110, 110, 12065, 245, 173, 183, 11956, 300, 38, 468, 4, 150, 12214, 12197, 51, 12107, 96, 269, 138, 295, 12122, 133, 12158, 12176, 12122, 12287, 25, 167, 12006, 12005, 12182, 12165, 12134, 12275, 474, 12139, 284, 12287, 61, 12154, 12203, 12222, 135, 12183, 214, 66, 23, 128, 12256, 23, 201, 12155, 12271, 12215, 12254, 12174, 557, 146, 12185, 155, 96, 233, 130, 12206, 225, 272, 11, 43, 11980, 12250, 12121, 12143, 12101, 282, 148, 61, 12241, 12267, 183, 438, 12040, 49, 12285, 97, 242, 12094, 22, 89, 12181, 12286, 12250, 12090, 12254, 232, 112, 12201, 35, 12239, 167, 28, 12170, 12264, 118, 12025, 12116, 12254, 79, 12280, 12064, 12244, 185, 12012, 12172, 170, 12048, 12159, 12210, 170, 12022, 96, 12257, 12244, 12230, 201, 32, 12261, 9, 12201, 91, 12219, 398, 12032, 21, 309, 12267, 169, 12190, 12106, 113, 12096, 12168, 12094, 19, 203, 165, 83, 160, 11988, 11960, 12272, 11938, 12119, 106, 24, 12237, 12073, 12279, 113, 12174, 0, 140, 179, 12205, 25, 12286, 12219, 62, 7, 12090, 117, 304, 12182, 25, 17, 93, 11975, 12251, 60, 12274, 12152, 11944, 230, 82, 170, 19, 136, 12139, 12156, 17, 36, 18, 12087, 171, 12156, 82, 416, 12183, 19, 105, 12098, 35, 86, 60, 12212, 12163, 16, 60, 231, 161, 12187, 15, 12241, 11966, 217, 99, 12155, 12159, 12116, 12083, 101, 12163, 12153, 9, 11981, 11860, 11888, 11937, 11922, 12281, 40, 37, 187, 12243, 160, 12008, 171, 79, 12286, 0, 11, 12286, 256, 94, 219, 17, 127, 12243, 12205, 12157, 12008, 96, 12239, 12183, 174, 12204, 85, 370, 181, 111, 185, 12261, 22, 12012, 56, 2, 12225, 12177, 60, 12177, 355, 12184, 25, 12071, 12246, 30, 12165, 12200, 11905, 124, 12249, 12159, 12250, 12282, 272, 12242, 62, 236, 12089, 109, 49, 393, 104, 309, 12067, 12201, 12273, 164, 5, 12135, 12271, 12212, 12191, 9, 12137, 316, 62, 12184, 12191, 12275, 182, 41, 12158, 16, 12265, 412, 12165, 282, 50, 12277, 12221, 314, 221, 93, 116, 12134, 12284, 72, 11962, 12230, 164, 12103, 12135, 12157, 89, 40, 72, 3, 57, 12104, 11900, 12129, 12280, 293, 12158, 12246, 12112, 12279, 93, 12209, 12216, 12135, 114, 12148, 12247, 66, 12181, 120, 193, 90, 12068, 136, 96, 68, 12233, 12150, 12280, 91, 295, 12154, 12199, 73, 316, 12192, 12188, 40, 44, 12090, 12163, 275, 12196, 0, 48, 12272, 12103]
// forgefmt: disable-next-line
uint256[32] memory tmp_s2 = [21412424242127082749610191839594829392609335319990662478876364133294951759985, 938197166425361380710370353796599425511229962339559620164675044002097409939, 21647411321071212380761415897307069808958400586121678825154806791311314649193, 21462219969556675763555611051663129394279025351199249323826899476414370939245, 21532570112142586367213716456156282998882970169651536503256279162900785278707, 21601473486094596278097689415768313475766014769988104499793352491966770261860, 150193458487198855960172412486860950466445743917494382397285067450316226641, 63936079761480428901679655785343220182344262444313383981477033448091168724, 21391218793246810542894263058024234198425450067853564400670791803242390892366, 21494022974037990514034492875641587719272379241657474320245997058192701194336, 226157044397558708313848400855036171451956097324768575903477268262834876262, 21566138777573877099557493308809750273628886950442867571793324261757020483552, 773883953089600364097561083085227543243017227910536201641816112224598491361, 21557304056970610111204775034836942486808579572748898192758264058277730004744, 21223371934745051167914669435621300396040813795764848505121538289868127272995, 21557301285044470254816923161326995105145083344818767855254692732795701833612, 358670471364258104760714939225456754161095942466404070493513978650688159835, 328210437288473321774710936334930011045884507386554434481927591059194021, 21157996108003185944232451222500907214109530742953072012336327589114699513996, 21355880957270181049275784779783162902793112397695029577916382944137202905051, 408143289567265176959499044317175596826929427503599671510878281598475436203, 21168594930748873226772498811875707934017541796377192364540189468144969646241, 19435322766729971344933822343177832892069531222182584839246203044511100500, 150511019766944497768812530943806559859096445227616250146176978210900684798, 44499656755767137370694155539619425792158039142667017406186993499424227698, 21359420528678883772827468699927033449515682905127077855108096608968277110567, 21444223072869933784225684209838546304984593361719441611816857423601015521389, 21592968965942438078516618456421132386728252108832191235632804038799762784572, 127214067098599146044102912383538310785919339012842875166013412905288794426, 201747729362989241789380364419493806857510840486777789744138313435815936003, 521222342516545346869170296352098282898180697487366395837698420813812150132, 21384480877498030869454209405815772458304077720102573529957815727485943754618];
uint256[] memory s2 = new uint256[](32);
for (uint i = 0; i < 32; i++) {
	s2[i] = tmp_s2[i];
}
// message = "\x50\x72\x61\x63\x74\x69\x63\x61\x6c\x20\x73\x65\x63\x75\x72\x69\x74\x79\x20\x6f\x6e\x20\x74\x68\x65\x20\x63\x68\x61\x69\x6e\x2e"
// salt = "\xc3\xff\x24\xbc\x6b\x6d\x7a\x3d\x30\x7c\xe7\xb1\x73\x1e\x7d\xf5\x96\x90\xd0\x53\x0d\x7f\x2f\x5b\xb9\xed\x37\xd1\x80\x16\x9a\x6c\x1b\xb0\x22\x25\x2a\xb8\xcc\x68"
// hash to point
// forgefmt: disable-next-line
uint256[512] memory _hashed = [uint256(12200), 10329, 2238, 942, 12237, 2418, 7434, 10100, 1779, 5977, 9333, 8600, 3374, 2148, 11791, 420, 6605, 4659, 1441, 2351, 8316, 7801, 3401, 9104, 1328, 3883, 4702, 4182, 3648, 4298, 3890, 3439, 10066, 9729, 3651, 10341, 8099, 4677, 6507, 9419, 6829, 11283, 10248, 4689, 2436, 7264, 7342, 9511, 2622, 8126, 7483, 3005, 9393, 7934, 9043, 5582, 5497, 768, 5874, 2441, 7857, 4033, 7022, 6395, 6168, 469, 5877, 9952, 9106, 1566, 5769, 8529, 1512, 6716, 5778, 6000, 6732, 399, 8052, 8587, 94, 10851, 3204, 11545, 408, 7579, 11092, 6020, 8482, 11440, 2050, 8774, 3038, 65, 4057, 5651, 9239, 5492, 1342, 5251, 12248, 4595, 4984, 8978, 4819, 11757, 7520, 9460, 4120, 3650, 6722, 4276, 3555, 5351, 4900, 6706, 6362, 4622, 10578, 6230, 11893, 2752, 3348, 2128, 475, 4174, 1332, 11763, 1475, 726, 4686, 12148, 7378, 1616, 11890, 10011, 9673, 4121, 4195, 7611, 6998, 11193, 473, 5408, 10361, 11361, 3707, 8317, 8876, 5384, 6545, 111, 5560, 1742, 9839, 5754, 429, 9640, 8971, 3196, 2543, 1280, 2432, 4573, 9459, 7560, 9746, 7561, 1349, 3454, 3066, 6674, 3393, 11214, 7502, 8612, 2402, 11117, 11104, 9359, 5436, 5159, 10605, 10467, 12049, 11220, 6327, 847, 6380, 3521, 5213, 9775, 3092, 5112, 5195, 4540, 9655, 6780, 1904, 1870, 3429, 10613, 8496, 2467, 7260, 9142, 867, 11787, 10064, 2152, 5547, 9229, 2038, 10, 5955, 11433, 7020, 3911, 4620, 6505, 8100, 1288, 2720, 11700, 8144, 2013, 10438, 2524, 6399, 10192, 5568, 10424, 635, 9077, 3195, 10019, 11016, 10714, 3276, 6498, 8402, 2325, 5193, 4300, 7954, 3361, 2161, 3576, 6739, 11674, 4205, 9192, 2318, 4867, 7641, 911, 3341, 1771, 4381, 3839, 1979, 826, 9270, 5549, 11472, 6382, 5577, 1641, 5433, 10137, 2081, 3538, 9455, 10967, 4200, 1785, 6283, 4034, 11883, 2505, 1304, 3282, 6623, 4974, 3495, 5315, 8021, 8105, 2839, 6339, 9170, 2042, 11795, 2557, 5845, 2892, 1629, 4064, 6902, 1125, 8899, 8445, 5659, 3352, 7070, 2038, 4449, 7700, 2532, 8129, 4466, 182, 660, 3660, 7782, 9047, 714, 3212, 3249, 10721, 1420, 10956, 10281, 3700, 1376, 6801, 2570, 1241, 3401, 7389, 7875, 11288, 8423, 7392, 5568, 1147, 1944, 3611, 1255, 10398, 10626, 8218, 1821, 2344, 1871, 7100, 9956, 3474, 1707, 9533, 7029, 7348, 10792, 6522, 7897, 4322, 9377, 1603, 3672, 7817, 5103, 3211, 11923, 6067, 1385, 10948, 6145, 10493, 11305, 8951, 6650, 2858, 10341, 10354, 8958, 7028, 1574, 6076, 10837, 8662, 1421, 7723, 423, 7169, 6448, 4144, 7603, 6956, 5565, 7928, 94, 12030, 6502, 10800, 10669, 10264, 7856, 3484, 1004, 10548, 3580, 9170, 1797, 2504, 12255, 1473, 4998, 11490, 9718, 2763, 952, 4003, 5842, 7028, 1729, 9929, 12205, 10210, 3564, 645, 2283, 9703, 6373, 11096, 10311, 11551, 6942, 9680, 6001, 9679, 7402, 9040, 424, 6060, 11138, 2895, 11066, 11379, 2085, 11405, 802, 5223, 7238, 413, 5094, 6428, 5420, 9017, 11168, 9489, 9440, 347, 2261, 3187, 10659, 1609, 12162, 1512, 4401, 3892, 3713, 8477, 8352, 3340, 8671, 7431, 4245, 2172, 3857, 11648, 11320, 11629, 7828, 8347, 76, 7540, 5628, 9451, 11912, 8694, 5881, 2516, 5517, 748, 9034, 1521, 9806, 1382, 2467, 6050, 10000, 1329, 2239, 10516, 8499, 9022, 1796, 11179, 3512, 163, 3055, 11981, 7211, 11750, 2778, 3403, 1023, 3795, 1751, 10386, 4008, 1035];
uint256[] memory hashed = new uint256[](512);
for (uint i = 0; i < 512; i++) {
	hashed[i] = _hashed[i];
}
bool result = falcon_core(s2, pkc, hashed);
assertEq(true, result);}
}
