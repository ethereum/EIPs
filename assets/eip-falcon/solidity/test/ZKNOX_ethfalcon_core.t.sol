
// code generated using pythonref/generate_falcon_test_vectors.py.
pragma solidity ^0.8.25;

import {Test, console} from "forge-std/Test.sol";
import "../src/ZKNOX_NTT.sol";
import "../src/ZKNOX_falcon_utils.sol";
import "../src/ZKNOX_ethfalcon.sol";
import "../src/ZKNOX_falcon_core.sol";
import "../src/ZKNOX_falcon_deploy.sol";

contract ZKNOX_FalconTest is Test {
    ZKNOX_ethfalcon falcon;

    //stateful initialisation
    function setUp() public {
        bytes32 salt = keccak256(abi.encodePacked("ZKnox"));

        falcon = new ZKNOX_ethfalcon();
    }
function testVector0() public view {
// public key
// uncompressed pk = [10801, 4232, 5459, 11291, 11617, 6672, 3181, 7235, 6277, 11587, 9475, 3223, 6163, 1264, 1968, 3205, 3530, 3165, 4215, 125, 10423, 1623, 12148, 4735, 8393, 2401, 10147, 3362, 5998, 9467, 11765, 11191, 647, 11577, 7308, 11070, 1104, 555, 10204, 5072, 3692, 10621, 9638, 7684, 12265, 6089, 5831, 8267, 5236, 11342, 6111, 9831, 2028, 9056, 7227, 7048, 6882, 5545, 2282, 11026, 6177, 10346, 5574, 8968, 306, 10602, 3821, 8062, 1767, 2933, 11766, 5552, 5637, 1984, 9277, 183, 8288, 9427, 408, 3127, 9196, 4478, 12273, 3280, 11134, 10187, 1906, 7328, 9049, 8658, 10711, 6608, 8544, 2098, 5098, 8660, 9811, 11340, 1631, 11659, 10935, 10253, 1699, 5994, 1241, 6277, 10575, 7252, 6909, 6378, 699, 10683, 6056, 3937, 6060, 2623, 7878, 3611, 4124, 11905, 292, 6034, 5088, 6201, 11979, 8945, 8153, 6703, 9255, 6899, 7748, 4666, 1047, 2071, 6781, 1738, 12048, 9437, 9322, 9433, 11963, 949, 10369, 4765, 4392, 10006, 3291, 11138, 5256, 3971, 5289, 5168, 7870, 11141, 4678, 2951, 337, 1613, 434, 10382, 4103, 3083, 4420, 10700, 5760, 8761, 405, 4541, 6766, 483, 2941, 6298, 5878, 5102, 1096, 5664, 6755, 586, 10921, 10037, 10749, 10533, 1446, 1662, 9112, 3790, 7364, 54, 4634, 1049, 11406, 441, 4811, 7143, 10566, 2853, 9448, 7785, 11381, 3938, 5726, 4997, 7680, 2449, 1444, 11970, 9141, 8427, 11139, 722, 11395, 4937, 12219, 10626, 2493, 8458, 2034, 5328, 366, 935, 9904, 2264, 11834, 1695, 12152, 12258, 5111, 4194, 6676, 7811, 11447, 2073, 2767, 2154, 1377, 3468, 4083, 7813, 12079, 9451, 11777, 11618, 6770, 10262, 1609, 1158, 10740, 4165, 1340, 9981, 4340, 5731, 5313, 3746, 10249, 7431, 4014, 7691, 6564, 587, 3675, 9650, 6680, 1934, 8571, 8522, 501, 4425, 8524, 7788, 2511, 4879, 1805, 279, 7522, 5912, 872, 10799, 7437, 4893, 2540, 8058, 10061, 6782, 2583, 2942, 9338, 2934, 8368, 10380, 6784, 11892, 10908, 6832, 5942, 1910, 6648, 4648, 5634, 11916, 11379, 8617, 1303, 8804, 262, 2999, 1729, 4475, 11102, 5360, 1879, 5551, 7764, 11472, 6990, 4438, 8824, 10934, 5333, 10903, 12020, 5807, 8070, 11514, 764, 350, 4651, 11933, 3192, 6508, 2679, 11179, 5934, 5862, 2389, 4929, 12127, 7534, 6259, 3837, 10847, 9613, 7612, 3813, 8407, 6347, 4599, 6846, 1177, 5376, 8757, 11896, 1293, 10232, 3008, 11996, 9557, 4754, 3270, 10705, 7359, 4135, 9781, 4182, 4065, 8255, 8616, 151, 2379, 11806, 9979, 9624, 6296, 4981, 8813, 11926, 9848, 12119, 5813, 4975, 4483, 10644, 2851, 8127, 8404, 9979, 6586, 1800, 5186, 6689, 11948, 1519, 6416, 6492, 9561, 9621, 9172, 1404, 10062, 4709, 3836, 806, 5329, 9013, 7146, 4434, 6881, 1115, 2707, 9491, 10420, 2911, 4599, 329, 4377, 9941, 4617, 3685, 1058, 373, 9393, 3636, 9068, 2254, 8113, 9411, 848, 4148, 6530, 5420, 2940, 7132, 6254, 10486, 4923, 8350, 1118, 1344, 1912, 3558, 2863, 2421, 6605, 9760, 1308, 4179, 10535, 10086, 9639, 1899, 6731, 4545, 6425, 7369, 8623, 264, 6670, 7476, 2818, 5601, 2361, 911, 6983, 11873, 6799, 6131, 9926, 7667, 9882, 6287, 3173, 225, 7166, 2088, 10329, 845, 7059, 10625, 12050, 3185, 2759, 1081, 1118, 10201, 746, 5674, 11334, 9024, 6896, 5963, 3274, 7121, 6, 6833, 3551, 1473, 11501, 5327, 9995, 4483, 5782, 11070, 8410, 2745, 3559, 7085, 5856, 1718, 6552, 9091, 1098, 11382]
// forgefmt: disable-next-line
uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
uint256[] memory pkc = new uint[](32);
for (uint256 i = 0; i < 32; i++) {
	pkc[i] = tmp_pkc[i];
}
// signature s2
// uncompressed s2 = [12205, 12232, 146, 280, 180, 43, 12281, 12002, 126, 12204, 17, 74, 12196, 360, 189, 128, 39, 104, 12143, 81, 54, 17, 103, 12249, 12261, 12227, 12170, 12184, 12199, 180, 9, 12204, 198, 135, 12244, 12132, 12257, 12249, 27, 12030, 340, 48, 12185, 12270, 206, 12139, 47, 51, 44, 11998, 12196, 251, 6, 12185, 12095, 157, 12013, 187, 19, 227, 173, 103, 14, 12256, 161, 378, 12245, 12131, 12268, 11886, 184, 11999, 12257, 229, 12003, 64, 15, 11997, 12288, 70, 12015, 12258, 12188, 194, 12162, 122, 12269, 21, 292, 11961, 210, 12152, 12147, 147, 90, 12036, 101, 12215, 198, 12136, 12152, 14, 12278, 198, 23, 12253, 12181, 12220, 25, 15, 10, 11972, 4, 104, 12285, 0, 58, 12170, 12153, 180, 267, 12167, 77, 12288, 300, 115, 12202, 151, 42, 12172, 12179, 12245, 12206, 11938, 12152, 12033, 11958, 93, 11, 11892, 12199, 422, 80, 12272, 12168, 14, 12107, 211, 202, 49, 28, 12118, 168, 70, 64, 93, 12211, 12006, 55, 12160, 12071, 156, 12278, 84, 12004, 160, 12172, 12167, 12001, 11968, 141, 11950, 147, 12238, 12147, 12165, 12137, 54, 181, 11990, 251, 64, 12125, 12017, 160, 77, 12253, 12063, 12110, 12115, 82, 48, 138, 12215, 12098, 12190, 12189, 80, 12053, 160, 244, 12210, 151, 10, 12271, 12250, 12259, 198, 121, 12184, 12142, 165, 12237, 12283, 6, 170, 201, 12147, 12229, 131, 106, 125, 6, 368, 12147, 57, 11803, 48, 202, 12268, 12161, 12103, 120, 12028, 117, 156, 12246, 12246, 12079, 12162, 12281, 12259, 27, 135, 69, 12227, 171, 161, 215, 12143, 12125, 23, 11848, 12041, 12281, 178, 12050, 12, 108, 114, 12228, 12142, 12222, 77, 12194, 12213, 172, 232, 5, 143, 317, 20, 12100, 12130, 12006, 97, 12223, 197, 61, 152, 12277, 12270, 18, 5, 158, 12140, 12113, 12233, 12288, 12008, 12211, 11975, 12230, 12287, 12163, 151, 144, 118, 279, 12144, 12170, 12113, 12037, 86, 150, 12172, 63, 12279, 12252, 12143, 12169, 91, 116, 12028, 12227, 28, 12215, 12088, 12067, 11933, 12284, 67, 12004, 209, 12217, 80, 223, 12196, 33, 12238, 9, 230, 12074, 12189, 193, 12265, 100, 23, 55, 11999, 12186, 12185, 12278, 174, 97, 12112, 12216, 169, 196, 207, 2, 215, 12106, 257, 174, 12194, 87, 178, 12191, 110, 210, 203, 12034, 17, 105, 16, 66, 139, 55, 11901, 114, 12210, 131, 12275, 6, 62, 11896, 352, 429, 63, 12154, 156, 17, 12046, 149, 5, 63, 12135, 299, 12125, 355, 126, 12148, 12029, 12251, 179, 12148, 86, 13, 107, 133, 136, 38, 268, 277, 12195, 92, 12281, 76, 84, 4, 12077, 12088, 136, 12263, 12171, 12069, 112, 12226, 109, 62, 12045, 12220, 12183, 223, 12164, 12169, 12210, 12253, 64, 12218, 246, 12150, 12250, 72, 232, 12275, 12105, 12213, 134, 34, 12201, 15, 11996, 12128, 5, 12024, 12098, 11987, 133, 121, 107, 11921, 11996, 48, 12200, 12119, 172, 240, 12245, 12111, 12245, 12213, 12222, 30, 25, 12237, 12237, 417, 12088, 12061, 12265, 12266, 216, 12193, 156, 222, 12228, 12244, 12072, 12132, 2, 87, 96, 12198, 19, 64, 194, 105, 120, 51, 73, 11918, 120, 188, 128, 47, 12010, 226, 12284, 3, 49, 12211, 12279, 245, 12115, 44, 12147, 12008, 42, 51, 12192]
// forgefmt: disable-next-line
uint256[32] memory tmp_s2 = [226161519869725251356344408907678892390104083586443563386125715426949738413, 21562601821269046643200858246202301062882075022429333461940742114375696384039, 90110472414887206477556374273677958001997210199677829434480895130167869638, 21654478003405504511793214880183423382929023752422285237729687373819110359084, 124010583294412487840928470639623851466514210374141790445951906817056047265, 21265773698128382376022414973503284259154426469208937332107898559103680786159, 21152693329132454665465594805050489554057022987498904220914967648446535106661, 267122872098078746204314427438418999544365432680553123824944190772157612036, 21682749335929743170997895048871458212437570849625560537002514737635745595434, 21484861795441278719515884781875615016373675264589641157843053661627825926024, 21494022030535633365205167718007907277461970816212877879540051900491462618919, 84810874808887099016503540234665696039790220957637403019349383349827678057, 350166225851747430063282192816376389746770807469089243428549425128277475466, 650199881649548118992129068296237894454679779678092241702610418170527744121, 21488719656068291800611809833048050573318660200348545716103717126286509420403, 314829877589026152452887293853354466667021155167076575997137597709859106809, 35345487657487992676444089392285082869581089981817556183765262333748457234, 21614166714262062022744724588614947811478116106019858299625278902489629994820, 152273369432049113794598368263972752042931312526597870853463921178997960704, 21084111354649684158712973468179417192282084173425140862405837349011434766486, 21670384457790930114458052024912458205631480789721490499424656469597800837116, 379872172932402056331205938589211266183595970379019632768796329750222536804, 245593521367258131080917704623762266216657855821763979281880033371241918282, 21283440200703761945357331956834716141942358303792526371596883332396933251127, 189052986446048398455180269543195197282143096421268665349796348614205046933, 21504626235299717977365561039066129148841879524220507149017609506261092008069, 434973774590266779008708861354942402923329948686241231971615661507036065573, 21375639956089752449127111071353048175707725148465526277052153320707821547382, 21594734092587436036182371931355996474990889855110505875435994529156361957075, 21329707868621957044425685110229835681048781346542006194666559814521442598942, 226161492811046565732054082664382647078339185537063904212969076231405449060, 21541400788752694945415155366788038951273885644370092786472578455575017947183];
uint256[] memory s2 = new uint256[](32);
for (uint i = 0; i < 32; i++) {
	s2[i] = tmp_s2[i];
}
// message = "\x4d\x79\x20\x6e\x61\x6d\x65\x20\x69\x73\x20\x52\x65\x6e\x61\x75\x64\x20\x66\x72\x6f\x6d\x20\x5a\x4b\x4e\x4f\x58\x21\x21\x21\x21"
// salt = "\x46\xb9\xdd\x2b\x0b\xa8\x8d\x13\x23\x3b\x3f\xeb\x74\x3e\xeb\x24\x3f\xcd\x52\xea\x62\xb8\x1b\x82\xb5\x0c\x27\x64\x6e\xd5\x76\x2f\xd7\x5d\xc4\xdd\xd8\xc0\xf2\x00"
// hash to point
// forgefmt: disable-next-line
uint256[512] memory _hashed = [uint256(3464), 4265, 6929, 6688, 7891, 9017, 7649, 5630, 9109, 7790, 11684, 89, 4880, 11781, 7200, 3831, 1956, 9625, 2825, 1981, 6862, 93, 10953, 8813, 618, 7048, 3942, 1415, 450, 6514, 1319, 11725, 11260, 3563, 3394, 11707, 8450, 4542, 5045, 2423, 2880, 11557, 1710, 7278, 10898, 7701, 11869, 8622, 3866, 3774, 9709, 8811, 3428, 723, 2177, 10499, 10418, 8748, 6768, 1225, 11805, 10814, 2320, 2229, 6356, 4577, 1240, 575, 4455, 3968, 372, 10325, 9178, 2063, 10014, 3797, 1469, 7640, 10912, 3383, 10547, 9284, 7105, 5014, 6151, 5400, 2940, 4659, 3972, 5955, 11345, 10547, 4179, 9488, 973, 7327, 4816, 8435, 5185, 7706, 5974, 8470, 12255, 380, 328, 7243, 9388, 1306, 8487, 7643, 2718, 3354, 9461, 9729, 1717, 12154, 11674, 5766, 3638, 6532, 11283, 6651, 1053, 810, 10083, 8277, 8845, 3236, 6061, 3677, 755, 1901, 8529, 2261, 6623, 5983, 6017, 7183, 11867, 3861, 10471, 7922, 2694, 4281, 5871, 9086, 11392, 8704, 2461, 8634, 601, 11444, 11445, 3353, 11926, 4115, 1673, 4065, 4766, 10392, 10502, 9829, 6127, 10920, 11385, 8572, 11532, 70, 7932, 615, 2499, 4753, 3312, 5493, 3488, 1171, 4835, 6669, 10870, 1944, 2729, 8504, 9424, 8109, 9084, 11686, 6165, 807, 1470, 10634, 2015, 5658, 7560, 6964, 6955, 4832, 8588, 6959, 360, 10700, 51, 5863, 12083, 6763, 3778, 3809, 937, 4077, 9092, 11099, 2943, 1523, 330, 11682, 11217, 1588, 3309, 3563, 7434, 11464, 3589, 2067, 5428, 11185, 833, 11758, 7584, 1228, 554, 3324, 4646, 7680, 1876, 5777, 9128, 10700, 1351, 9549, 762, 10416, 1209, 6206, 2151, 4866, 11969, 7769, 8702, 10292, 6356, 1156, 4726, 9449, 10751, 9630, 5717, 959, 9830, 1271, 6397, 6006, 11205, 509, 2182, 8619, 11994, 3616, 1599, 306, 10375, 8109, 645, 8212, 12105, 6981, 6814, 5735, 8117, 8822, 3116, 7904, 2079, 4549, 7464, 4541, 8296, 7539, 9062, 5665, 809, 9645, 878, 4903, 10799, 8885, 8210, 4719, 4948, 9640, 436, 11538, 10188, 10772, 7385, 11412, 2467, 3687, 8303, 2329, 5335, 4868, 10992, 2755, 7554, 2524, 12147, 3701, 11988, 2010, 3807, 2854, 4659, 3021, 10030, 3410, 8058, 7103, 477, 10099, 8993, 1392, 8486, 478, 4059, 7121, 10192, 5956, 11428, 299, 5068, 6509, 4975, 9878, 2288, 6935, 11597, 1304, 4290, 3474, 9489, 3368, 3582, 10475, 1967, 3569, 7131, 4942, 9784, 69, 1713, 11136, 3546, 10222, 9278, 9358, 7249, 5572, 5887, 3800, 1192, 1929, 4424, 1073, 11740, 3418, 10883, 295, 215, 11517, 2569, 3894, 4594, 406, 10772, 9601, 10743, 6989, 12161, 7996, 10073, 3379, 10636, 6807, 12197, 7805, 5531, 3811, 9170, 7308, 1101, 7215, 2110, 9021, 1874, 3194, 466, 856, 3474, 1679, 1404, 8014, 10128, 11246, 3166, 2360, 8532, 4312, 538, 9353, 9554, 11116, 7730, 11758, 3732, 3415, 1946, 7230, 10984, 4919, 6214, 75, 10808, 3962, 4213, 10705, 11826, 11130, 8562, 11259, 843, 8709, 11248, 9296, 2773, 9756, 6958, 4053, 7149, 5567, 8207, 12157, 7443, 10924, 7680, 1116, 3777, 2069, 6300, 10749, 4528, 5966, 10398, 2062, 5941, 5159, 7522, 4406, 7584, 1379, 1381, 2405, 6618, 7338, 5156, 8683, 9305, 6257, 11491, 3019, 8951, 7453, 11287, 4834, 4941, 8300, 1746, 544, 4873, 2302, 6297, 8694, 2805, 1237, 8867, 2849, 9692, 9808, 2354, 9417, 10693, 3504, 2938, 4347, 5853, 12167, 1771, 9576, 11979, 11364, 9023, 10152, 3792, 2514];
uint256[] memory hashed = new uint256[](512);
for (uint i = 0; i < 512; i++) {
	hashed[i] = _hashed[i];
}
bool result = falcon_core(s2, pkc, hashed);
assertEq(true, result);}
function testVector1() public view {
// public key
// uncompressed pk = [10801, 4232, 5459, 11291, 11617, 6672, 3181, 7235, 6277, 11587, 9475, 3223, 6163, 1264, 1968, 3205, 3530, 3165, 4215, 125, 10423, 1623, 12148, 4735, 8393, 2401, 10147, 3362, 5998, 9467, 11765, 11191, 647, 11577, 7308, 11070, 1104, 555, 10204, 5072, 3692, 10621, 9638, 7684, 12265, 6089, 5831, 8267, 5236, 11342, 6111, 9831, 2028, 9056, 7227, 7048, 6882, 5545, 2282, 11026, 6177, 10346, 5574, 8968, 306, 10602, 3821, 8062, 1767, 2933, 11766, 5552, 5637, 1984, 9277, 183, 8288, 9427, 408, 3127, 9196, 4478, 12273, 3280, 11134, 10187, 1906, 7328, 9049, 8658, 10711, 6608, 8544, 2098, 5098, 8660, 9811, 11340, 1631, 11659, 10935, 10253, 1699, 5994, 1241, 6277, 10575, 7252, 6909, 6378, 699, 10683, 6056, 3937, 6060, 2623, 7878, 3611, 4124, 11905, 292, 6034, 5088, 6201, 11979, 8945, 8153, 6703, 9255, 6899, 7748, 4666, 1047, 2071, 6781, 1738, 12048, 9437, 9322, 9433, 11963, 949, 10369, 4765, 4392, 10006, 3291, 11138, 5256, 3971, 5289, 5168, 7870, 11141, 4678, 2951, 337, 1613, 434, 10382, 4103, 3083, 4420, 10700, 5760, 8761, 405, 4541, 6766, 483, 2941, 6298, 5878, 5102, 1096, 5664, 6755, 586, 10921, 10037, 10749, 10533, 1446, 1662, 9112, 3790, 7364, 54, 4634, 1049, 11406, 441, 4811, 7143, 10566, 2853, 9448, 7785, 11381, 3938, 5726, 4997, 7680, 2449, 1444, 11970, 9141, 8427, 11139, 722, 11395, 4937, 12219, 10626, 2493, 8458, 2034, 5328, 366, 935, 9904, 2264, 11834, 1695, 12152, 12258, 5111, 4194, 6676, 7811, 11447, 2073, 2767, 2154, 1377, 3468, 4083, 7813, 12079, 9451, 11777, 11618, 6770, 10262, 1609, 1158, 10740, 4165, 1340, 9981, 4340, 5731, 5313, 3746, 10249, 7431, 4014, 7691, 6564, 587, 3675, 9650, 6680, 1934, 8571, 8522, 501, 4425, 8524, 7788, 2511, 4879, 1805, 279, 7522, 5912, 872, 10799, 7437, 4893, 2540, 8058, 10061, 6782, 2583, 2942, 9338, 2934, 8368, 10380, 6784, 11892, 10908, 6832, 5942, 1910, 6648, 4648, 5634, 11916, 11379, 8617, 1303, 8804, 262, 2999, 1729, 4475, 11102, 5360, 1879, 5551, 7764, 11472, 6990, 4438, 8824, 10934, 5333, 10903, 12020, 5807, 8070, 11514, 764, 350, 4651, 11933, 3192, 6508, 2679, 11179, 5934, 5862, 2389, 4929, 12127, 7534, 6259, 3837, 10847, 9613, 7612, 3813, 8407, 6347, 4599, 6846, 1177, 5376, 8757, 11896, 1293, 10232, 3008, 11996, 9557, 4754, 3270, 10705, 7359, 4135, 9781, 4182, 4065, 8255, 8616, 151, 2379, 11806, 9979, 9624, 6296, 4981, 8813, 11926, 9848, 12119, 5813, 4975, 4483, 10644, 2851, 8127, 8404, 9979, 6586, 1800, 5186, 6689, 11948, 1519, 6416, 6492, 9561, 9621, 9172, 1404, 10062, 4709, 3836, 806, 5329, 9013, 7146, 4434, 6881, 1115, 2707, 9491, 10420, 2911, 4599, 329, 4377, 9941, 4617, 3685, 1058, 373, 9393, 3636, 9068, 2254, 8113, 9411, 848, 4148, 6530, 5420, 2940, 7132, 6254, 10486, 4923, 8350, 1118, 1344, 1912, 3558, 2863, 2421, 6605, 9760, 1308, 4179, 10535, 10086, 9639, 1899, 6731, 4545, 6425, 7369, 8623, 264, 6670, 7476, 2818, 5601, 2361, 911, 6983, 11873, 6799, 6131, 9926, 7667, 9882, 6287, 3173, 225, 7166, 2088, 10329, 845, 7059, 10625, 12050, 3185, 2759, 1081, 1118, 10201, 746, 5674, 11334, 9024, 6896, 5963, 3274, 7121, 6, 6833, 3551, 1473, 11501, 5327, 9995, 4483, 5782, 11070, 8410, 2745, 3559, 7085, 5856, 1718, 6552, 9091, 1098, 11382]
// forgefmt: disable-next-line
uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
uint256[] memory pkc = new uint[](32);
for (uint256 i = 0; i < 32; i++) {
	pkc[i] = tmp_pkc[i];
}
// signature s2
// uncompressed s2 = [201, 245, 12233, 12281, 12269, 12129, 59, 12080, 186, 20, 12176, 12286, 154, 12245, 182, 12135, 30, 12245, 12132, 11944, 124, 20, 3, 12124, 80, 243, 98, 104, 12089, 12276, 12195, 215, 12189, 12187, 82, 12227, 105, 98, 12277, 23, 12046, 199, 12186, 60, 54, 12242, 260, 169, 146, 12108, 127, 12256, 12255, 12124, 12212, 12211, 12206, 317, 12239, 61, 112, 189, 12215, 110, 282, 12211, 12126, 17, 61, 254, 33, 27, 12223, 12194, 12233, 12251, 12141, 29, 12158, 30, 198, 12258, 80, 11917, 12160, 12211, 287, 11973, 125, 12058, 12178, 213, 12216, 12204, 12251, 12135, 177, 12263, 12261, 94, 12172, 12141, 81, 11933, 179, 12151, 223, 311, 12190, 12043, 139, 11983, 12132, 163, 12205, 12235, 183, 12219, 221, 26, 12273, 12056, 12204, 12150, 12216, 12188, 209, 189, 9, 51, 12106, 11993, 143, 12101, 68, 167, 12108, 262, 188, 152, 26, 219, 12170, 84, 12126, 12176, 221, 12069, 11936, 418, 12283, 137, 413, 12205, 452, 61, 12286, 12180, 12125, 92, 12240, 13, 12173, 12044, 95, 142, 12204, 134, 173, 277, 76, 12224, 52, 361, 106, 12141, 168, 229, 12116, 12190, 12055, 12028, 12169, 68, 12063, 78, 20, 12074, 12052, 11933, 37, 34, 314, 12162, 145, 12133, 47, 4, 12272, 375, 96, 12220, 191, 28, 24, 171, 12138, 12105, 39, 12107, 12097, 124, 301, 12075, 12237, 279, 12161, 11976, 11996, 29, 161, 272, 12185, 163, 12167, 85, 12006, 11876, 12269, 213, 12, 251, 11918, 12211, 12236, 12213, 11906, 193, 12227, 12239, 12235, 99, 11898, 12188, 12137, 12094, 12088, 12102, 12065, 121, 72, 80, 12096, 12123, 23, 33, 275, 130, 12206, 89, 283, 394, 216, 2, 12244, 12284, 12180, 12246, 12037, 12246, 247, 78, 35, 355, 74, 52, 12125, 295, 12139, 12223, 88, 12259, 12279, 12142, 227, 12140, 244, 140, 12251, 12133, 12284, 169, 306, 18, 12156, 44, 12263, 53, 42, 362, 12185, 215, 12139, 11918, 12172, 12243, 12014, 12132, 138, 12191, 6, 11939, 12023, 31, 110, 12196, 53, 10, 5, 88, 151, 45, 12209, 37, 4, 189, 12144, 12176, 12182, 12108, 131, 223, 207, 88, 176, 63, 106, 44, 12254, 92, 12162, 10, 12246, 185, 12004, 12279, 43, 12213, 12242, 56, 12255, 229, 12228, 4, 26, 114, 206, 20, 239, 127, 177, 12126, 12197, 12019, 12128, 29, 12222, 11877, 12226, 113, 159, 12173, 12231, 200, 12075, 83, 76, 12170, 78, 330, 21, 86, 12256, 12163, 146, 16, 165, 12215, 12145, 227, 11889, 295, 219, 12255, 42, 12237, 92, 12113, 12267, 201, 12161, 12178, 69, 192, 12206, 334, 28, 11972, 12132, 251, 12210, 12215, 39, 12208, 52, 427, 60, 5, 12224, 11878, 125, 50, 182, 12232, 12129, 90, 304, 29, 12193, 16, 12280, 11896, 12212, 48, 12188, 12205, 12263, 12246, 11889, 12161, 55, 128, 100, 79, 11943, 122, 152, 12059, 353, 12246, 12114, 12091, 12029, 12209, 15, 12231, 15, 12062, 228, 409, 11950, 11786, 290, 12127, 11944, 12265, 59, 11863, 12243, 12174, 27, 11647, 12079, 131, 12259, 26, 35, 12283, 80, 21, 316, 12214, 12187, 12172, 12257, 12205, 12248, 142, 12211, 299, 12041, 241, 12281, 12231, 12286, 24, 12280, 89, 12270, 112, 12231, 136, 12080, 48, 394, 12147, 71, 12279, 338, 12138, 289, 42]
// forgefmt: disable-next-line
uint256[32] memory tmp_s2 = [21440694042833289054859749855694575694399621679942126537696744239308540805321, 380200900527087903224326724114275961802418842162457382299704292326755336222, 298604168569747447516733362087161829566044948540276643909788447361623338909, 194682492951912314693936458046240808985167958933488963667924374198713843858, 53333190986936866872301118356711987429531265623693865114053462381691076890, 21441019422412824187463657900747788250411949004068482317825613727957247983814, 21172132129626245519190349073435496550902555201401793361299060516640524796081, 333939734885897141171231244964845202404239102234610483484146716496451809124, 148743256082415044703838220904079284456280494946499960355112737790802198537, 162876824323589057350010366868496274400038523676927971665920610436916457310, 21451293071377217977316988980937099503153122394212697845104989626071434211280, 60073802629518875194566799997892701371571355504662768542337694242739388584, 21388010959045333654550249268920461317681766077421315061886640197954976219450, 288324578620911196781992098930610641995732878587436407235475269071879733287, 21624770865170015391876548096284746821433659423404993579108651609466470739847, 58306578203648892272463127352705348073784711790997981069480417999607508939, 137820735197328524800939211298585477679560587151345402233591435376942252307, 247365172290068348432716319199145743732214791451021337050436911314485051427, 21057610584909899338065540361217526751281977004016132608798516133638000947163, 155482676504345252004369030790819473805218553674896374888958720571501391756, 111316110067854030918836710239341002535279091677401712973197139845583798423, 404938372003769851816973325931699341456053884478709294219490316357240356970, 20985172092853042635462029670362048401755759749768614600379340417613265383364, 21490491270041219678796121148298539063021861672024087358751344245065408131010, 355466982669220941517977638158671888775201034001279981236619754206084989074, 754445103599676955486608285659921917080202576378706706417948238863790124929, 21018743750755391149513108066216528958425557242107859084336124450923199397948, 21306412852124692893774122701145280233741093988114863084817413412677005356980, 21426562177800554428094035469743241800361702627276691628387212884742254231905, 37105950209012782067595235163411218879343734453960612925073790644968304296, 42735564491052485928947290223186483191102936563227320476086824772570579260, 74215373138564650405080100096684004533669528950729722287741826395134308344];
uint256[] memory s2 = new uint256[](32);
for (uint i = 0; i < 32; i++) {
	s2[i] = tmp_s2[i];
}
// message = "\x4d\x79\x20\x6e\x61\x6d\x65\x20\x69\x73\x20\x53\x69\x6d\x6f\x6e\x20\x61\x6c\x73\x6f\x20\x66\x72\x6f\x6d\x20\x5a\x4b\x4e\x4f\x58"
// salt = "\x34\x9e\xc7\x55\x46\xf5\x8f\xb7\xc2\x77\x5c\x38\x46\x2c\x50\x10\xd8\x46\xc1\x85\xc1\x51\x11\xe5\x95\x52\x2a\x6b\xcd\x16\xcf\x86\xf3\xd1\x22\x10\x9e\x3b\x1f\xdd"
// hash to point
// forgefmt: disable-next-line
uint256[512] memory _hashed = [uint256(6186), 2719, 4673, 4190, 9061, 6663, 9849, 6270, 10727, 1466, 2887, 4346, 10824, 950, 7748, 11782, 2341, 8531, 569, 822, 7811, 5429, 12171, 6252, 4806, 7346, 1138, 5865, 7079, 1052, 54, 1344, 8618, 5214, 2307, 1333, 6176, 7795, 4526, 275, 10504, 5197, 18, 8859, 162, 1276, 10168, 6287, 4443, 842, 4127, 8528, 5510, 7367, 4511, 8571, 8677, 3567, 10416, 8030, 7124, 11269, 7931, 11937, 2975, 8055, 5713, 1001, 10981, 8171, 9316, 11014, 4797, 4313, 650, 7977, 6585, 5926, 10566, 10644, 11369, 7856, 8175, 6805, 2086, 4152, 7880, 7369, 10192, 3990, 6537, 9340, 11601, 6105, 3551, 6501, 3564, 8408, 9002, 2824, 4952, 4298, 589, 12118, 9854, 4417, 9047, 10188, 5166, 3192, 7199, 494, 10432, 1710, 1985, 12198, 3287, 1452, 4248, 1666, 626, 11164, 302, 5031, 7406, 1309, 3746, 4373, 10643, 9264, 11372, 6742, 3244, 11765, 2151, 5464, 7321, 11584, 10379, 2626, 2512, 9640, 5060, 10693, 5103, 5574, 12025, 7835, 9869, 2756, 5239, 7510, 2921, 6648, 3106, 4100, 8869, 2124, 4647, 7940, 7975, 9217, 8639, 7459, 5611, 1285, 4775, 2269, 1355, 3021, 10047, 6266, 7104, 12263, 904, 5542, 4384, 4215, 8556, 6664, 5857, 2249, 8315, 2009, 6079, 1240, 6831, 11837, 9819, 1350, 3296, 4421, 6838, 11034, 1563, 4306, 2915, 9568, 8215, 4799, 10928, 9579, 5269, 10945, 11170, 1457, 11629, 3820, 11123, 10603, 5433, 7101, 10918, 6538, 5531, 11447, 9294, 10224, 2811, 568, 9859, 3516, 11803, 7115, 4664, 3665, 4744, 7653, 4265, 12103, 6871, 9956, 7750, 9974, 6966, 1425, 3009, 4802, 8765, 3256, 11467, 12262, 6483, 10742, 4516, 8, 11289, 1130, 3254, 6774, 9377, 4740, 1433, 2601, 10934, 5356, 7878, 6605, 9870, 4652, 3312, 10812, 8611, 6776, 10046, 2852, 2892, 1822, 10196, 7790, 10041, 6539, 9668, 9530, 8087, 4785, 10742, 247, 4133, 10094, 8816, 7761, 7196, 5757, 7645, 6102, 3115, 7574, 11326, 1975, 9726, 7718, 10881, 4010, 2373, 1721, 11887, 11171, 6514, 10354, 5988, 6581, 5522, 6427, 9879, 6079, 3412, 4940, 714, 1451, 6077, 12099, 2051, 8915, 1282, 3222, 9994, 9127, 10449, 11645, 8260, 6498, 10245, 5225, 8503, 5754, 5362, 5847, 161, 5188, 11018, 9444, 7015, 1903, 2307, 1054, 10373, 12053, 8550, 1202, 9836, 4470, 11291, 8851, 8587, 4176, 4352, 4500, 4257, 4617, 9589, 12008, 5069, 5493, 5476, 10091, 6981, 8859, 8780, 10357, 414, 11221, 4413, 3276, 3445, 6024, 7765, 307, 1185, 10925, 1922, 3974, 2078, 11007, 6790, 2765, 8040, 2071, 6681, 4124, 9559, 9066, 2103, 4097, 5927, 12125, 1396, 9662, 4296, 5640, 8291, 8698, 136, 11050, 11346, 7514, 6753, 481, 8972, 9432, 5219, 3159, 3673, 1373, 5795, 9807, 231, 7189, 9215, 8988, 12140, 6735, 6517, 2117, 10320, 3832, 9386, 12185, 7894, 5846, 938, 2965, 9210, 1728, 4984, 8511, 3783, 402, 7967, 3151, 9000, 9084, 10753, 4781, 11469, 1460, 2219, 6800, 11151, 8807, 8741, 4584, 7339, 11352, 8921, 6917, 8783, 10118, 222, 5586, 8391, 3368, 1919, 9354, 9687, 4922, 1116, 9838, 10288, 11563, 4237, 6173, 9797, 5639, 7694, 2509, 3982, 1153, 11783, 8310, 5230, 2040, 9683, 7792, 2461, 2644, 7635, 9684, 9748, 3058, 9641, 5398, 9670, 8386, 7544, 7850, 3043, 12127, 2502, 11290, 9430, 7952, 880, 8545, 5872, 1953, 7840, 11225, 11838, 6454, 10423, 7629, 3070, 5133, 8722, 3956, 9591, 5011, 10887, 5904, 4405, 944];
uint256[] memory hashed = new uint256[](512);
for (uint i = 0; i < 512; i++) {
	hashed[i] = _hashed[i];
}
bool result = falcon_core(s2, pkc, hashed);
assertEq(true, result);}
function testVector2() public view {
// public key
// uncompressed pk = [10801, 4232, 5459, 11291, 11617, 6672, 3181, 7235, 6277, 11587, 9475, 3223, 6163, 1264, 1968, 3205, 3530, 3165, 4215, 125, 10423, 1623, 12148, 4735, 8393, 2401, 10147, 3362, 5998, 9467, 11765, 11191, 647, 11577, 7308, 11070, 1104, 555, 10204, 5072, 3692, 10621, 9638, 7684, 12265, 6089, 5831, 8267, 5236, 11342, 6111, 9831, 2028, 9056, 7227, 7048, 6882, 5545, 2282, 11026, 6177, 10346, 5574, 8968, 306, 10602, 3821, 8062, 1767, 2933, 11766, 5552, 5637, 1984, 9277, 183, 8288, 9427, 408, 3127, 9196, 4478, 12273, 3280, 11134, 10187, 1906, 7328, 9049, 8658, 10711, 6608, 8544, 2098, 5098, 8660, 9811, 11340, 1631, 11659, 10935, 10253, 1699, 5994, 1241, 6277, 10575, 7252, 6909, 6378, 699, 10683, 6056, 3937, 6060, 2623, 7878, 3611, 4124, 11905, 292, 6034, 5088, 6201, 11979, 8945, 8153, 6703, 9255, 6899, 7748, 4666, 1047, 2071, 6781, 1738, 12048, 9437, 9322, 9433, 11963, 949, 10369, 4765, 4392, 10006, 3291, 11138, 5256, 3971, 5289, 5168, 7870, 11141, 4678, 2951, 337, 1613, 434, 10382, 4103, 3083, 4420, 10700, 5760, 8761, 405, 4541, 6766, 483, 2941, 6298, 5878, 5102, 1096, 5664, 6755, 586, 10921, 10037, 10749, 10533, 1446, 1662, 9112, 3790, 7364, 54, 4634, 1049, 11406, 441, 4811, 7143, 10566, 2853, 9448, 7785, 11381, 3938, 5726, 4997, 7680, 2449, 1444, 11970, 9141, 8427, 11139, 722, 11395, 4937, 12219, 10626, 2493, 8458, 2034, 5328, 366, 935, 9904, 2264, 11834, 1695, 12152, 12258, 5111, 4194, 6676, 7811, 11447, 2073, 2767, 2154, 1377, 3468, 4083, 7813, 12079, 9451, 11777, 11618, 6770, 10262, 1609, 1158, 10740, 4165, 1340, 9981, 4340, 5731, 5313, 3746, 10249, 7431, 4014, 7691, 6564, 587, 3675, 9650, 6680, 1934, 8571, 8522, 501, 4425, 8524, 7788, 2511, 4879, 1805, 279, 7522, 5912, 872, 10799, 7437, 4893, 2540, 8058, 10061, 6782, 2583, 2942, 9338, 2934, 8368, 10380, 6784, 11892, 10908, 6832, 5942, 1910, 6648, 4648, 5634, 11916, 11379, 8617, 1303, 8804, 262, 2999, 1729, 4475, 11102, 5360, 1879, 5551, 7764, 11472, 6990, 4438, 8824, 10934, 5333, 10903, 12020, 5807, 8070, 11514, 764, 350, 4651, 11933, 3192, 6508, 2679, 11179, 5934, 5862, 2389, 4929, 12127, 7534, 6259, 3837, 10847, 9613, 7612, 3813, 8407, 6347, 4599, 6846, 1177, 5376, 8757, 11896, 1293, 10232, 3008, 11996, 9557, 4754, 3270, 10705, 7359, 4135, 9781, 4182, 4065, 8255, 8616, 151, 2379, 11806, 9979, 9624, 6296, 4981, 8813, 11926, 9848, 12119, 5813, 4975, 4483, 10644, 2851, 8127, 8404, 9979, 6586, 1800, 5186, 6689, 11948, 1519, 6416, 6492, 9561, 9621, 9172, 1404, 10062, 4709, 3836, 806, 5329, 9013, 7146, 4434, 6881, 1115, 2707, 9491, 10420, 2911, 4599, 329, 4377, 9941, 4617, 3685, 1058, 373, 9393, 3636, 9068, 2254, 8113, 9411, 848, 4148, 6530, 5420, 2940, 7132, 6254, 10486, 4923, 8350, 1118, 1344, 1912, 3558, 2863, 2421, 6605, 9760, 1308, 4179, 10535, 10086, 9639, 1899, 6731, 4545, 6425, 7369, 8623, 264, 6670, 7476, 2818, 5601, 2361, 911, 6983, 11873, 6799, 6131, 9926, 7667, 9882, 6287, 3173, 225, 7166, 2088, 10329, 845, 7059, 10625, 12050, 3185, 2759, 1081, 1118, 10201, 746, 5674, 11334, 9024, 6896, 5963, 3274, 7121, 6, 6833, 3551, 1473, 11501, 5327, 9995, 4483, 5782, 11070, 8410, 2745, 3559, 7085, 5856, 1718, 6552, 9091, 1098, 11382]
// forgefmt: disable-next-line
uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
uint256[] memory pkc = new uint[](32);
for (uint256 i = 0; i < 32; i++) {
	pkc[i] = tmp_pkc[i];
}
// signature s2
// uncompressed s2 = [12125, 12075, 12019, 11986, 12100, 25, 63, 43, 11967, 34, 11931, 12040, 32, 12285, 12243, 279, 11882, 41, 12210, 409, 15, 92, 164, 12199, 12116, 12281, 249, 12090, 173, 179, 89, 12263, 83, 12260, 119, 279, 12283, 180, 2, 69, 264, 86, 12147, 81, 201, 12155, 12287, 62, 12247, 40, 140, 557, 12108, 209, 91, 12277, 147, 127, 259, 151, 136, 110, 300, 285, 21, 186, 12211, 12268, 12283, 12090, 11904, 170, 65, 226, 12276, 189, 12197, 40, 12234, 12096, 99, 236, 13, 273, 12048, 12217, 12212, 12047, 79, 12278, 12016, 222, 9, 31, 12271, 12, 446, 12009, 126, 24, 145, 6, 96, 155, 114, 5, 12270, 135, 12206, 12275, 12239, 98, 147, 12281, 113, 12094, 130, 85, 0, 183, 16, 123, 94, 195, 126, 181, 12133, 12119, 12259, 12284, 1, 172, 12235, 44, 34, 12192, 92, 12106, 12186, 12024, 12194, 12246, 12229, 12271, 9, 12196, 38, 12126, 12120, 57, 66, 12135, 65, 82, 155, 128, 40, 40, 11954, 12110, 3, 12241, 235, 12197, 187, 105, 12128, 141, 71, 12241, 149, 12263, 11901, 12003, 49, 73, 276, 218, 12027, 10, 77, 44, 43, 12108, 330, 237, 12272, 207, 12199, 12236, 11995, 12245, 151, 12272, 12144, 12107, 12117, 12246, 49, 45, 12177, 12275, 12261, 55, 12107, 91, 257, 177, 74, 122, 12193, 317, 189, 12009, 194, 11967, 266, 12229, 12208, 12239, 12256, 352, 12239, 12184, 12040, 207, 12115, 102, 12224, 96, 17, 12202, 12189, 12139, 237, 12263, 67, 55, 12265, 98, 12223, 14, 241, 100, 12084, 12071, 337, 11898, 11909, 215, 12034, 231, 12203, 102, 12008, 12239, 186, 217, 333, 363, 112, 12220, 11903, 102, 101, 9, 150, 31, 71, 8, 152, 68, 11, 146, 145, 35, 12280, 67, 12083, 65, 27, 78, 12188, 12267, 192, 109, 51, 171, 12142, 212, 101, 344, 12092, 12129, 77, 9, 122, 12013, 12072, 109, 155, 12215, 12072, 216, 223, 12262, 12206, 141, 92, 62, 193, 11879, 199, 67, 181, 12274, 20, 12187, 212, 12252, 12185, 194, 3, 12205, 12240, 12229, 12145, 37, 110, 56, 12134, 12175, 12097, 323, 56, 174, 97, 240, 53, 12284, 12275, 423, 56, 49, 12079, 12284, 11934, 75, 12252, 43, 12115, 12144, 48, 175, 11977, 12230, 12257, 242, 138, 101, 12238, 12189, 104, 0, 76, 179, 12264, 12232, 19, 91, 163, 12263, 12019, 12239, 159, 40, 111, 12141, 12280, 169, 174, 75, 297, 102, 12198, 68, 179, 301, 333, 18, 55, 12160, 12126, 68, 12192, 14, 12202, 12255, 24, 44, 143, 12128, 12181, 20, 331, 51, 12282, 12200, 127, 84, 11795, 152, 416, 155, 12001, 67, 12195, 12174, 152, 12123, 12029, 25, 216, 184, 12223, 12218, 12200, 12267, 12092, 12213, 12104, 12284, 12142, 12157, 12266, 12243, 167, 12147, 96, 105, 12287, 12120, 12215, 12265, 12205, 43, 12095, 12100, 12276, 12026, 12028, 12216, 12204, 12040, 12079, 92, 12131, 12142, 26, 317, 139, 12130, 12087, 136, 12209, 12219, 29, 50, 4, 12209, 55, 245, 54, 12247, 12192, 12128, 33, 10, 12041, 12177, 12235, 68, 11893, 12252, 12265, 166, 152, 12277, 79, 35, 428, 12268, 12104, 88, 196, 76, 121, 12108, 22, 12116, 87, 12223, 15, 114, 12155, 316, 12161, 39, 34, 12089, 244, 12019]
// forgefmt: disable-next-line
uint256[32] memory tmp_s2 = [493280406753971226929976031993596850342161111769088657759474092498387414877, 21666847954886217826123635476511534057550082275486231742862337843079420653162, 109875779881237343610361203519621467418377214301497312083217702145854013523, 503559501491091908149810671762781556617803573964815629679220676117999923159, 21372111923563394378968013641991361339397762109386277117902664433219650846741, 21532990295645934290355831564872678296456029412764353701557850661383307363, 173480980185259649575791620110178636369669309822598196803120717449233236414, 21412746683156612101084891765314968827983432013471749676878020185680898490515, 21681310030121135439859814426876165480980070959966453727048157072466602897379, 21396840233685148646671379850245383285037514069299062225680501622844160213001, 128981161704031251784854793261393600224759350926019698641624147363672162307, 21635365697805263602901298789127025939929303985502366564601768330372593615124, 312738859209578709605724524224454848234140239569960557701171734594972549271, 21527594600191975262698759859594253387465486455064772181657836103769186238538, 173481676116780376299789997749090946611467760971006314728840295483060465416, 21624764960904261920358943142936811072411684308237944131517399197477191430079, 120149698320114996100748073311329857140638466475824628357142275607443865786, 302132223079224950606872447307549491354751163962023601416055057784134303755, 381964431493257372594453185920670056274137042058408520083182815574448418670, 21647415958186899378726232571498739302820178667564698188390356859748065083615, 307432899161402662052853686553080133384893846062126131313747474270394658713, 21456917374440337909509543177157961359147775450053932760273264921545288974433, 21612403933228759860909192837402577646806726181419202755100193969794221801520, 180226407742409648039194863413372872826179697811580321953470262234429718547, 77741922930460102806599114199758228650232041145483256643448691507614461862, 118702299723870137795351332442449242690861802196273737549076621668856627343, 21704275671956344989475420798210146558259612448899703590043993885858480402339, 21379175564391155362138871081486477216288599520801141537497762534844440325998, 240617070675219561230587748069191713484516510548261799689441157787275636724, 21515221332528319111888890973818457537968587277578981988393795080115304738737, 134285661108981050049243599585195266262653999130588572481093224346941665227, 21235741454771514403806989755440143813739340546610785310564869342396846702713];
uint256[] memory s2 = new uint256[](32);
for (uint i = 0; i < 32; i++) {
	s2[i] = tmp_s2[i];
}
// message = "\x4d\x79\x20\x6e\x61\x6d\x65\x20\x69\x73\x20\x4e\x69\x63\x6f\x6c\x61\x73\x20\x66\x72\x6f\x6d\x20\x5a\x4b\x4e\x4f\x58\x74\x6f\x6f"
// salt = "\xaa\xae\x31\x4e\xd9\x08\x3d\xab\x4b\x09\x9f\x8e\x30\x0f\x01\xb8\x65\x0f\x1f\x4b\x1d\x8f\xcf\x3f\x3c\xb5\x3f\xb8\xe9\xeb\x2e\xa2\x03\xbd\xc9\x70\xf5\x0a\xe5\x54"
// hash to point
// forgefmt: disable-next-line
uint256[512] memory _hashed = [uint256(6455), 5976, 11189, 532, 3118, 1765, 3559, 6237, 10109, 2705, 2044, 5274, 6577, 7200, 9560, 4026, 611, 8461, 4539, 11679, 932, 5958, 8994, 6067, 7452, 5817, 1011, 5761, 4978, 9081, 814, 11303, 9600, 7413, 12023, 10260, 7208, 6607, 3582, 10106, 2911, 5191, 10972, 7349, 8016, 11637, 10670, 11158, 1413, 1859, 5672, 1617, 10439, 4062, 1054, 2709, 12177, 7511, 9786, 1720, 6400, 11259, 7828, 9537, 10609, 2146, 2356, 9227, 7315, 4892, 8036, 1760, 4047, 11601, 7214, 743, 2351, 8135, 9157, 5552, 4887, 5388, 9397, 11126, 164, 3855, 8783, 7520, 9390, 5931, 2704, 1699, 11483, 676, 8369, 6327, 7761, 9118, 7468, 132, 6779, 6578, 6475, 6182, 78, 6109, 7215, 967, 9462, 2986, 3769, 8106, 623, 2460, 6920, 8727, 8060, 3700, 1405, 6004, 779, 8893, 5059, 6686, 2294, 169, 11484, 536, 9156, 2452, 1577, 4575, 4622, 8338, 11456, 4412, 2510, 11960, 245, 2254, 611, 3342, 3973, 2336, 9660, 10407, 3942, 9510, 4872, 6045, 10161, 3361, 5496, 11759, 5368, 11458, 9138, 11364, 641, 3266, 4156, 10988, 3110, 5618, 9136, 1710, 2471, 4641, 83, 4119, 9076, 4634, 10890, 3564, 4904, 1075, 6722, 4508, 8258, 8396, 4368, 9636, 9897, 11961, 10304, 7871, 6908, 9008, 6699, 2264, 6888, 3974, 6567, 2551, 11950, 5460, 12015, 1139, 2578, 5320, 9184, 3112, 4949, 7527, 7626, 10803, 11724, 11841, 6320, 2784, 8731, 8122, 7562, 5422, 8983, 6214, 3972, 5725, 6793, 10093, 2659, 10536, 5358, 4399, 8740, 4181, 10935, 9633, 10780, 1006, 7671, 2767, 7672, 4845, 2129, 3804, 11825, 4079, 9863, 1094, 2591, 7723, 7985, 679, 12219, 10489, 5653, 10365, 5323, 8990, 10802, 12095, 10945, 5151, 5841, 10924, 505, 8433, 970, 3735, 3138, 2609, 4837, 4769, 4111, 6485, 11016, 1595, 8428, 1482, 7114, 5503, 11103, 4161, 4301, 5871, 12077, 12064, 1788, 6940, 8278, 11590, 4560, 4269, 10840, 5792, 2678, 9918, 3872, 3888, 70, 6564, 7855, 8353, 3411, 11597, 8043, 2231, 2944, 5728, 1353, 9227, 9873, 4493, 11630, 5557, 5766, 8230, 588, 672, 5828, 2933, 8824, 4944, 1392, 5401, 1507, 57, 386, 9328, 11250, 852, 7047, 7809, 12038, 8383, 2624, 12023, 8123, 7902, 7870, 10001, 9152, 10719, 10109, 2641, 11207, 1258, 1397, 11191, 7587, 7060, 2504, 8785, 9423, 2672, 11901, 8772, 4739, 9766, 1791, 1156, 1486, 3406, 10181, 4800, 9624, 3845, 11564, 7260, 6392, 7125, 6072, 617, 778, 6475, 4155, 5464, 2798, 494, 6656, 5569, 5811, 11283, 1601, 11723, 6314, 2597, 2012, 1549, 11303, 2131, 4288, 902, 4037, 8039, 5571, 710, 4959, 895, 1029, 11766, 11089, 4957, 7230, 6478, 702, 483, 8900, 2093, 897, 1375, 2307, 3358, 3894, 10741, 5890, 9791, 3914, 1111, 9404, 7827, 5758, 10028, 3807, 11105, 12073, 5462, 6739, 728, 10854, 10654, 521, 8667, 1129, 895, 3886, 10965, 2379, 11241, 7736, 5704, 11151, 9321, 9042, 3552, 142, 6455, 10624, 12259, 4064, 526, 8447, 2067, 11561, 11910, 2833, 4453, 504, 8735, 8757, 10055, 6546, 1085, 9404, 2466, 450, 11748, 9627, 800, 8053, 5354, 4543, 10827, 9635, 2389, 5561, 2203, 10374, 9071, 3389, 5764, 10718, 4982, 9824, 6933, 11014, 5112, 1048, 10333, 3072, 465, 6188, 5828, 3656, 195, 7945, 2961, 10683, 9249, 5791, 2416, 4619, 990, 7220, 6288, 8158, 10329, 9458, 8605, 11746, 189, 2329, 1564, 4339, 3337, 8868, 6057, 455, 761, 4926, 7752];
uint256[] memory hashed = new uint256[](512);
for (uint i = 0; i < 512; i++) {
	hashed[i] = _hashed[i];
}
bool result = falcon_core(s2, pkc, hashed);
assertEq(true, result);}
function testVector3() public view {
// public key
// uncompressed pk = [10801, 4232, 5459, 11291, 11617, 6672, 3181, 7235, 6277, 11587, 9475, 3223, 6163, 1264, 1968, 3205, 3530, 3165, 4215, 125, 10423, 1623, 12148, 4735, 8393, 2401, 10147, 3362, 5998, 9467, 11765, 11191, 647, 11577, 7308, 11070, 1104, 555, 10204, 5072, 3692, 10621, 9638, 7684, 12265, 6089, 5831, 8267, 5236, 11342, 6111, 9831, 2028, 9056, 7227, 7048, 6882, 5545, 2282, 11026, 6177, 10346, 5574, 8968, 306, 10602, 3821, 8062, 1767, 2933, 11766, 5552, 5637, 1984, 9277, 183, 8288, 9427, 408, 3127, 9196, 4478, 12273, 3280, 11134, 10187, 1906, 7328, 9049, 8658, 10711, 6608, 8544, 2098, 5098, 8660, 9811, 11340, 1631, 11659, 10935, 10253, 1699, 5994, 1241, 6277, 10575, 7252, 6909, 6378, 699, 10683, 6056, 3937, 6060, 2623, 7878, 3611, 4124, 11905, 292, 6034, 5088, 6201, 11979, 8945, 8153, 6703, 9255, 6899, 7748, 4666, 1047, 2071, 6781, 1738, 12048, 9437, 9322, 9433, 11963, 949, 10369, 4765, 4392, 10006, 3291, 11138, 5256, 3971, 5289, 5168, 7870, 11141, 4678, 2951, 337, 1613, 434, 10382, 4103, 3083, 4420, 10700, 5760, 8761, 405, 4541, 6766, 483, 2941, 6298, 5878, 5102, 1096, 5664, 6755, 586, 10921, 10037, 10749, 10533, 1446, 1662, 9112, 3790, 7364, 54, 4634, 1049, 11406, 441, 4811, 7143, 10566, 2853, 9448, 7785, 11381, 3938, 5726, 4997, 7680, 2449, 1444, 11970, 9141, 8427, 11139, 722, 11395, 4937, 12219, 10626, 2493, 8458, 2034, 5328, 366, 935, 9904, 2264, 11834, 1695, 12152, 12258, 5111, 4194, 6676, 7811, 11447, 2073, 2767, 2154, 1377, 3468, 4083, 7813, 12079, 9451, 11777, 11618, 6770, 10262, 1609, 1158, 10740, 4165, 1340, 9981, 4340, 5731, 5313, 3746, 10249, 7431, 4014, 7691, 6564, 587, 3675, 9650, 6680, 1934, 8571, 8522, 501, 4425, 8524, 7788, 2511, 4879, 1805, 279, 7522, 5912, 872, 10799, 7437, 4893, 2540, 8058, 10061, 6782, 2583, 2942, 9338, 2934, 8368, 10380, 6784, 11892, 10908, 6832, 5942, 1910, 6648, 4648, 5634, 11916, 11379, 8617, 1303, 8804, 262, 2999, 1729, 4475, 11102, 5360, 1879, 5551, 7764, 11472, 6990, 4438, 8824, 10934, 5333, 10903, 12020, 5807, 8070, 11514, 764, 350, 4651, 11933, 3192, 6508, 2679, 11179, 5934, 5862, 2389, 4929, 12127, 7534, 6259, 3837, 10847, 9613, 7612, 3813, 8407, 6347, 4599, 6846, 1177, 5376, 8757, 11896, 1293, 10232, 3008, 11996, 9557, 4754, 3270, 10705, 7359, 4135, 9781, 4182, 4065, 8255, 8616, 151, 2379, 11806, 9979, 9624, 6296, 4981, 8813, 11926, 9848, 12119, 5813, 4975, 4483, 10644, 2851, 8127, 8404, 9979, 6586, 1800, 5186, 6689, 11948, 1519, 6416, 6492, 9561, 9621, 9172, 1404, 10062, 4709, 3836, 806, 5329, 9013, 7146, 4434, 6881, 1115, 2707, 9491, 10420, 2911, 4599, 329, 4377, 9941, 4617, 3685, 1058, 373, 9393, 3636, 9068, 2254, 8113, 9411, 848, 4148, 6530, 5420, 2940, 7132, 6254, 10486, 4923, 8350, 1118, 1344, 1912, 3558, 2863, 2421, 6605, 9760, 1308, 4179, 10535, 10086, 9639, 1899, 6731, 4545, 6425, 7369, 8623, 264, 6670, 7476, 2818, 5601, 2361, 911, 6983, 11873, 6799, 6131, 9926, 7667, 9882, 6287, 3173, 225, 7166, 2088, 10329, 845, 7059, 10625, 12050, 3185, 2759, 1081, 1118, 10201, 746, 5674, 11334, 9024, 6896, 5963, 3274, 7121, 6, 6833, 3551, 1473, 11501, 5327, 9995, 4483, 5782, 11070, 8410, 2745, 3559, 7085, 5856, 1718, 6552, 9091, 1098, 11382]
// forgefmt: disable-next-line
uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
uint256[] memory pkc = new uint[](32);
for (uint256 i = 0; i < 32; i++) {
	pkc[i] = tmp_pkc[i];
}
// signature s2
// uncompressed s2 = [12283, 194, 12247, 19, 12099, 60, 12116, 12032, 0, 11972, 12231, 12098, 6, 12215, 63, 79, 11745, 94, 12095, 12255, 12266, 12027, 12259, 126, 163, 169, 12234, 12271, 12191, 60, 12163, 12089, 1, 12277, 186, 12197, 86, 129, 301, 57, 114, 12197, 159, 6, 318, 133, 156, 67, 118, 31, 12242, 100, 12176, 12176, 12244, 11864, 102, 74, 459, 9, 57, 12186, 12280, 12189, 41, 16, 12281, 12208, 12220, 206, 12261, 84, 124, 14, 12158, 12229, 11827, 12139, 296, 84, 11923, 12214, 36, 12264, 12242, 12238, 12021, 12123, 12147, 12187, 179, 8, 190, 12273, 98, 12236, 301, 12175, 128, 11936, 42, 12167, 87, 12229, 177, 1, 12101, 12001, 12219, 123, 12239, 12251, 133, 245, 87, 25, 14, 167, 53, 12211, 19, 12124, 24, 12049, 73, 22, 131, 146, 12230, 12267, 201, 12252, 168, 12112, 6, 181, 196, 12180, 97, 12220, 12208, 12124, 12173, 12189, 12240, 348, 11990, 315, 12186, 272, 12001, 97, 24, 83, 12152, 70, 463, 12046, 12126, 7, 72, 188, 12271, 153, 12242, 105, 36, 375, 52, 100, 191, 316, 12061, 12231, 12130, 440, 12208, 286, 255, 93, 12189, 12166, 146, 161, 12172, 228, 132, 51, 12073, 12248, 12113, 12178, 258, 12167, 11977, 3, 12098, 12207, 94, 12222, 416, 12129, 179, 11953, 12168, 12263, 12207, 12163, 128, 119, 98, 12224, 12226, 12220, 251, 187, 12081, 11856, 12239, 12285, 69, 12210, 92, 12133, 152, 19, 36, 48, 152, 12268, 118, 27, 161, 169, 132, 261, 122, 96, 12207, 12174, 12009, 7, 109, 12109, 138, 12125, 83, 12183, 55, 368, 12206, 12079, 272, 12081, 12117, 208, 53, 12210, 12124, 12004, 12151, 11959, 12283, 183, 322, 12196, 116, 186, 142, 68, 12149, 50, 12029, 12211, 12234, 91, 31, 11987, 12076, 144, 204, 227, 115, 12085, 12099, 12286, 9, 12211, 12279, 12080, 305, 12248, 12095, 12248, 12148, 12081, 113, 41, 42, 66, 61, 12015, 12209, 206, 93, 146, 12018, 12283, 15, 164, 97, 42, 12160, 11940, 137, 160, 12269, 12039, 284, 11952, 41, 213, 328, 12186, 12149, 288, 12266, 170, 298, 12170, 12079, 12264, 11902, 42, 243, 115, 27, 12038, 12190, 11942, 23, 23, 12256, 12184, 12046, 12235, 181, 12114, 1, 12138, 111, 13, 20, 214, 12278, 185, 51, 12240, 3, 291, 12247, 12236, 120, 159, 27, 12137, 219, 12253, 12195, 168, 12081, 12277, 29, 48, 211, 58, 154, 12020, 12254, 12281, 11, 123, 286, 155, 47, 90, 12208, 12284, 12241, 239, 130, 124, 183, 12272, 12273, 12134, 12133, 12209, 27, 12269, 199, 12133, 145, 2, 219, 12258, 12121, 4, 218, 12266, 12258, 439, 70, 72, 138, 99, 53, 267, 12162, 12113, 12175, 1, 204, 77, 4, 99, 12246, 12273, 12155, 111, 197, 58, 12273, 12135, 422, 42, 12171, 12090, 44, 57, 472, 11844, 12047, 12059, 130, 200, 67, 12211, 11971, 23, 12088, 161, 12269, 106, 12192, 12189, 12119, 12053, 12077, 12244, 12261, 166, 227, 12090, 12211, 0, 12213, 12095, 12098, 4, 12185, 12146, 103, 79, 9, 16, 26, 108, 78, 12189, 12210, 196, 12228, 12244, 12179, 12237, 44, 12154, 12207, 12227, 134, 12203, 12278, 12063, 12192, 141, 12270, 302, 12089, 118, 122, 12132, 1, 12211, 12197, 12053, 137, 12239, 12204, 199, 12241, 37]
// forgefmt: disable-next-line
uint256[32] memory tmp_s2 = [139582621619091973268406996862193698115430301984363595111361129735251963899, 21359742079961959807246726389930794441432293621268971096702536863089608764897, 118382959146546848231745772948852012638307191547927788022832285183894683649, 21536429945741829194822207571539258431069200017173625118392011897849553813622, 148423138579366956058453933217336125587539449861596574326165704499660849193, 21619143331751904588194814768420168152638632467051251418057648644844238024339, 21645973353437921644598641509099719846654215498799873410113902759399807451437, 257963203219708243300732811536722559054030349973301976653200023614616043653, 21536427061002106763298038443874169158917156624102982844590286126131717025734, 12694850722174439642871122874065057800644133054382397703390981767837790160, 777739737687178910580575551457083463876653934529989863387426992066039382088, 21516990125743754299336899012536203041248035844446387530000323264495367368624, 21490489954013236486107894822534818339565076439147260912588686182594426372354, 21437157922294133544212697991292265820771775754117682697931345064139374919808, 21509925266720509611414156962916589529068416782368373787089922554073875415192, 367830868117506652633718625851683829130321499160650676289409389877241786089, 88669889658952898442752642697476954446308354278215588371055551702317006901, 21574969755702614248520897941792480583348257926307134288187280486423275450109, 364299654275891111018512487940808841527579578145268499558750714322582777847, 21117363779808737333135289914774515051669156612888828075917860361460817985629, 203193963733906824598952038210561425452150206885692922469059683148180553769, 22972009389482636634192497037003523577501302464521224368742855070055792667, 21649182993950735668923104947618807833401398513458441748866431515688969830420, 273869005635995711530442580526213641543117021453352834677107989337277476771, 21677447370707124799045982324476925159788884325794191928617242127358022516783, 174921579915319636888007064211193098113178630414544151415314009163722719431, 102482440912378770604665655586245637409462049468160924345149628581252104245, 21574971314407553792678838266568751305931535667092054255730356374069653745649, 21361187133146925391703267663708276721497143620377962792430426707450819718851, 21536100975503995417294567412470637023431286155732131299406027168369673777075, 249454136766025531236971116086006518621283092784519519001855085335783157682, 65703358185893269824880694394039966480551855883551664435156905045093396462];
uint256[] memory s2 = new uint256[](32);
for (uint i = 0; i < 32; i++) {
	s2[i] = tmp_s2[i];
}
// message = "\x57\x65\x20\x61\x72\x65\x20\x5a\x4b\x4e\x6f\x78\x2c\x20\x79\x6f\x75\x20\x61\x6c\x72\x65\x61\x64\x79\x20\x6b\x6e\x6f\x77\x21\x21"
// salt = "\xf9\xa6\x6d\x13\x68\xb2\x08\xe2\x1f\x7c\x10\xd0\x4a\x3d\xbd\x4e\x36\x06\x33\xe5\xdb\x4b\x60\x26\x01\xc1\x4c\xea\x73\x7d\xb3\xdc\xf7\x22\x63\x2c\xc7\x78\x51\xcb"
// hash to point
// forgefmt: disable-next-line
uint256[512] memory _hashed = [uint256(2021), 8154, 8413, 5412, 9531, 8837, 93, 7491, 9324, 3142, 5271, 3986, 11372, 11658, 7322, 10077, 3355, 8654, 10946, 7594, 3881, 4564, 7952, 8803, 1361, 7693, 1821, 10786, 3282, 4304, 6829, 6732, 2178, 2500, 10172, 2836, 2678, 3465, 3128, 4563, 11354, 11055, 9906, 10006, 7982, 10330, 8262, 5564, 9501, 2694, 11614, 6429, 3056, 266, 4259, 5158, 1340, 224, 390, 5861, 1179, 10413, 1796, 4192, 11902, 8446, 11315, 11864, 6465, 354, 2399, 10366, 2514, 7587, 826, 5239, 10784, 8367, 11958, 1632, 1429, 189, 10364, 3685, 5157, 6528, 4797, 7631, 10412, 2846, 10671, 8649, 7271, 7366, 2193, 890, 1793, 2827, 11398, 7604, 7117, 3708, 934, 8188, 10166, 6622, 1573, 2765, 5549, 10632, 4011, 11466, 10238, 12018, 913, 8944, 9112, 2877, 8098, 4049, 5539, 3282, 1664, 7367, 770, 7485, 11968, 7950, 6756, 2868, 4231, 4447, 9030, 1781, 2233, 4689, 10257, 4449, 4768, 6242, 8864, 10629, 7796, 7691, 10282, 4906, 10958, 4026, 7201, 3684, 1088, 2845, 3938, 7409, 3276, 1979, 5068, 2851, 9155, 4705, 4006, 1973, 11785, 7193, 2438, 7045, 5229, 1793, 10302, 957, 8056, 8082, 8585, 6751, 2064, 6747, 12187, 2328, 4188, 4125, 10457, 10024, 4496, 9174, 2655, 11891, 5453, 933, 7888, 1975, 6540, 2420, 2547, 11758, 9825, 6243, 5055, 2722, 1656, 12146, 2111, 6852, 11160, 9073, 10746, 5252, 8545, 7468, 2198, 212, 6934, 11719, 10815, 8972, 9754, 4255, 11874, 4851, 9353, 6142, 9143, 11743, 4681, 5174, 3829, 10735, 8696, 5757, 11829, 9713, 1102, 7119, 3823, 11144, 10882, 5766, 5739, 8982, 961, 4046, 10557, 12086, 9962, 7822, 6219, 10612, 8931, 7556, 2031, 4205, 6095, 8199, 9715, 9056, 7455, 1666, 880, 5040, 9936, 804, 8162, 8931, 6620, 8063, 7216, 6244, 635, 2720, 7056, 6145, 4018, 7700, 11776, 11132, 8537, 7288, 10449, 10116, 2724, 7348, 3774, 6272, 1143, 9271, 9174, 7065, 5517, 3614, 11671, 405, 7567, 121, 1541, 958, 6795, 11534, 5293, 6848, 801, 6992, 6810, 4424, 10417, 2667, 4725, 214, 4290, 8744, 1195, 8525, 3362, 10018, 7295, 2124, 801, 3632, 8893, 6230, 9469, 3432, 11434, 11646, 2666, 10508, 8677, 5772, 3562, 7217, 10257, 10484, 10513, 6591, 11502, 10268, 3005, 6730, 12082, 6340, 11379, 10136, 8995, 1387, 5514, 2042, 8721, 6682, 5454, 10532, 5792, 12110, 6801, 5700, 8004, 8077, 166, 632, 266, 9360, 1874, 11082, 5213, 639, 5951, 9712, 2251, 1556, 6629, 11200, 4394, 4117, 3358, 7242, 10108, 9227, 7681, 10214, 6077, 3141, 2928, 2531, 9414, 1942, 4816, 2627, 1954, 650, 10436, 1010, 11916, 12260, 381, 750, 2692, 2881, 4144, 10111, 8863, 12252, 4874, 6212, 1019, 11398, 4572, 5272, 6951, 8896, 10510, 9958, 7217, 175, 4969, 450, 5522, 9452, 5639, 4012, 10479, 7845, 12051, 4971, 10048, 464, 4402, 997, 11969, 4461, 9522, 11349, 7846, 243, 8462, 602, 4949, 10122, 5813, 5677, 8549, 11449, 6165, 4587, 11252, 4709, 2067, 9633, 1957, 7172, 5525, 11796, 11370, 5695, 2593, 7684, 9745, 5054, 10897, 9886, 10784, 8603, 8181, 7202, 5113, 9720, 2614, 8838, 8663, 3147, 2679, 3954, 8448, 6581, 10344, 3444, 3161, 5314, 4789, 2359, 1978, 3717, 9214, 7123, 4039, 10786, 4297, 9783, 10776, 6314, 7292, 7057, 4134, 2868, 2356, 11946, 8861, 9398, 7725, 11985, 491, 11978, 9938, 26, 7743, 7045, 9622, 1677, 10671, 8827, 5149, 1751, 3944, 4029, 4840, 11087];
uint256[] memory hashed = new uint256[](512);
for (uint i = 0; i < 512; i++) {
	hashed[i] = _hashed[i];
}
bool result = falcon_core(s2, pkc, hashed);
assertEq(true, result);}
function testVector4() public view {
// public key
// uncompressed pk = [10801, 4232, 5459, 11291, 11617, 6672, 3181, 7235, 6277, 11587, 9475, 3223, 6163, 1264, 1968, 3205, 3530, 3165, 4215, 125, 10423, 1623, 12148, 4735, 8393, 2401, 10147, 3362, 5998, 9467, 11765, 11191, 647, 11577, 7308, 11070, 1104, 555, 10204, 5072, 3692, 10621, 9638, 7684, 12265, 6089, 5831, 8267, 5236, 11342, 6111, 9831, 2028, 9056, 7227, 7048, 6882, 5545, 2282, 11026, 6177, 10346, 5574, 8968, 306, 10602, 3821, 8062, 1767, 2933, 11766, 5552, 5637, 1984, 9277, 183, 8288, 9427, 408, 3127, 9196, 4478, 12273, 3280, 11134, 10187, 1906, 7328, 9049, 8658, 10711, 6608, 8544, 2098, 5098, 8660, 9811, 11340, 1631, 11659, 10935, 10253, 1699, 5994, 1241, 6277, 10575, 7252, 6909, 6378, 699, 10683, 6056, 3937, 6060, 2623, 7878, 3611, 4124, 11905, 292, 6034, 5088, 6201, 11979, 8945, 8153, 6703, 9255, 6899, 7748, 4666, 1047, 2071, 6781, 1738, 12048, 9437, 9322, 9433, 11963, 949, 10369, 4765, 4392, 10006, 3291, 11138, 5256, 3971, 5289, 5168, 7870, 11141, 4678, 2951, 337, 1613, 434, 10382, 4103, 3083, 4420, 10700, 5760, 8761, 405, 4541, 6766, 483, 2941, 6298, 5878, 5102, 1096, 5664, 6755, 586, 10921, 10037, 10749, 10533, 1446, 1662, 9112, 3790, 7364, 54, 4634, 1049, 11406, 441, 4811, 7143, 10566, 2853, 9448, 7785, 11381, 3938, 5726, 4997, 7680, 2449, 1444, 11970, 9141, 8427, 11139, 722, 11395, 4937, 12219, 10626, 2493, 8458, 2034, 5328, 366, 935, 9904, 2264, 11834, 1695, 12152, 12258, 5111, 4194, 6676, 7811, 11447, 2073, 2767, 2154, 1377, 3468, 4083, 7813, 12079, 9451, 11777, 11618, 6770, 10262, 1609, 1158, 10740, 4165, 1340, 9981, 4340, 5731, 5313, 3746, 10249, 7431, 4014, 7691, 6564, 587, 3675, 9650, 6680, 1934, 8571, 8522, 501, 4425, 8524, 7788, 2511, 4879, 1805, 279, 7522, 5912, 872, 10799, 7437, 4893, 2540, 8058, 10061, 6782, 2583, 2942, 9338, 2934, 8368, 10380, 6784, 11892, 10908, 6832, 5942, 1910, 6648, 4648, 5634, 11916, 11379, 8617, 1303, 8804, 262, 2999, 1729, 4475, 11102, 5360, 1879, 5551, 7764, 11472, 6990, 4438, 8824, 10934, 5333, 10903, 12020, 5807, 8070, 11514, 764, 350, 4651, 11933, 3192, 6508, 2679, 11179, 5934, 5862, 2389, 4929, 12127, 7534, 6259, 3837, 10847, 9613, 7612, 3813, 8407, 6347, 4599, 6846, 1177, 5376, 8757, 11896, 1293, 10232, 3008, 11996, 9557, 4754, 3270, 10705, 7359, 4135, 9781, 4182, 4065, 8255, 8616, 151, 2379, 11806, 9979, 9624, 6296, 4981, 8813, 11926, 9848, 12119, 5813, 4975, 4483, 10644, 2851, 8127, 8404, 9979, 6586, 1800, 5186, 6689, 11948, 1519, 6416, 6492, 9561, 9621, 9172, 1404, 10062, 4709, 3836, 806, 5329, 9013, 7146, 4434, 6881, 1115, 2707, 9491, 10420, 2911, 4599, 329, 4377, 9941, 4617, 3685, 1058, 373, 9393, 3636, 9068, 2254, 8113, 9411, 848, 4148, 6530, 5420, 2940, 7132, 6254, 10486, 4923, 8350, 1118, 1344, 1912, 3558, 2863, 2421, 6605, 9760, 1308, 4179, 10535, 10086, 9639, 1899, 6731, 4545, 6425, 7369, 8623, 264, 6670, 7476, 2818, 5601, 2361, 911, 6983, 11873, 6799, 6131, 9926, 7667, 9882, 6287, 3173, 225, 7166, 2088, 10329, 845, 7059, 10625, 12050, 3185, 2759, 1081, 1118, 10201, 746, 5674, 11334, 9024, 6896, 5963, 3274, 7121, 6, 6833, 3551, 1473, 11501, 5327, 9995, 4483, 5782, 11070, 8410, 2745, 3559, 7085, 5856, 1718, 6552, 9091, 1098, 11382]
// forgefmt: disable-next-line
uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
uint256[] memory pkc = new uint[](32);
for (uint256 i = 0; i < 32; i++) {
	pkc[i] = tmp_pkc[i];
}
// signature s2
// uncompressed s2 = [114, 10, 165, 12030, 11883, 51, 12049, 21, 182, 172, 12195, 117, 272, 12134, 12116, 11967, 66, 214, 483, 258, 147, 397, 12105, 12163, 84, 12102, 12108, 0, 35, 12205, 110, 101, 11973, 85, 12265, 85, 12116, 79, 256, 137, 12126, 12131, 12271, 12269, 12213, 144, 110, 49, 12199, 12252, 12204, 85, 12130, 303, 12284, 112, 150, 12121, 193, 12135, 11843, 51, 24, 444, 66, 214, 73, 16, 12074, 307, 12150, 209, 12282, 12208, 207, 41, 47, 12248, 12241, 200, 426, 12223, 12160, 160, 12277, 57, 12205, 142, 12225, 8, 12281, 12239, 151, 12215, 413, 41, 12088, 12115, 12285, 44, 2, 113, 12206, 152, 12232, 84, 12184, 31, 3, 229, 165, 12132, 12146, 12283, 12187, 133, 67, 12220, 12107, 11881, 12172, 115, 12284, 242, 11963, 12221, 26, 0, 11872, 12143, 100, 74, 157, 12278, 12059, 12169, 53, 12171, 12139, 408, 12271, 12284, 109, 37, 12283, 12024, 356, 119, 11979, 12287, 12143, 16, 42, 12255, 45, 57, 115, 12247, 12150, 12270, 267, 12281, 12144, 16, 9, 12229, 82, 94, 152, 12213, 133, 12188, 29, 16, 11997, 12069, 12229, 168, 229, 14, 12014, 95, 12100, 12254, 12038, 132, 12138, 12181, 12089, 70, 17, 164, 296, 12203, 12193, 175, 12005, 12168, 12132, 240, 73, 135, 88, 12237, 85, 157, 12233, 23, 12209, 20, 23, 12128, 12219, 12194, 56, 394, 166, 204, 12243, 11998, 12108, 12145, 74, 12147, 122, 19, 11970, 139, 271, 12282, 39, 196, 92, 12205, 12081, 171, 121, 12184, 147, 12070, 114, 320, 260, 13, 12134, 12185, 12247, 12190, 6, 12268, 12078, 117, 12066, 12253, 101, 12052, 12277, 12072, 12237, 213, 12132, 12080, 12208, 12249, 12221, 12280, 165, 75, 25, 12257, 125, 12269, 12057, 11967, 180, 265, 254, 15, 12096, 12116, 298, 12178, 76, 12279, 12285, 12257, 12282, 12247, 12054, 45, 6, 44, 141, 12282, 12283, 201, 240, 11992, 145, 12205, 84, 196, 77, 111, 12152, 167, 12052, 12110, 59, 273, 12011, 12206, 17, 12258, 12278, 12200, 12235, 12222, 12210, 222, 279, 94, 120, 12, 12177, 77, 275, 262, 12114, 12222, 12116, 12102, 12242, 216, 330, 143, 12271, 11948, 12251, 12151, 103, 4, 11933, 12223, 161, 118, 12203, 247, 12026, 12258, 310, 12194, 12261, 84, 28, 12142, 77, 12268, 12235, 12182, 12039, 11979, 12048, 12261, 12184, 11974, 12183, 11994, 42, 12083, 12179, 12144, 132, 12209, 12275, 3, 66, 138, 11, 12172, 12189, 45, 144, 12125, 78, 129, 37, 12118, 20, 12085, 247, 189, 252, 12211, 28, 31, 12247, 12140, 12013, 12107, 12197, 12180, 91, 12064, 243, 9, 12271, 12232, 12217, 219, 142, 12280, 176, 12036, 153, 12136, 57, 217, 10, 338, 12287, 273, 233, 27, 120, 12204, 12276, 147, 12088, 12248, 12256, 11994, 12081, 12270, 12222, 12239, 12230, 190, 338, 147, 158, 305, 86, 12252, 60, 302, 12220, 346, 141, 12023, 150, 43, 12147, 153, 17, 12084, 12274, 12108, 167, 12012, 146, 12211, 12226, 12256, 14, 37, 12146, 129, 109, 170, 12031, 153, 70, 60, 9, 11895, 11989, 12106, 49, 134, 12071, 21, 100, 12265, 335, 7, 67, 12099, 188, 52, 12221, 329, 12086, 12179, 399, 10, 139, 12069, 12085, 12269, 150, 12139, 12209, 12020, 253, 12285, 42, 12201, 12203, 12182, 234, 12235]
// forgefmt: disable-next-line
uint256[32] memory tmp_s2 = [21144185475908384251291848127658451840118668397120687346685347800276108181618, 178454524157596204083198831737579244400720412848618379921769757194428219458, 86578471827589046202171357245160750480897959197291238936653154487434030789, 784480743821377177934339092951575843300033553278216791444403021043486961575, 353699434701364706443627805959334892166508764041347923784496399286200041538, 72451869138847781661426646120114564018595725986978280352449638557032579498, 21435393038376763921101062668192245393782476009562964970873611640580267519800, 705986116237663506800642617894538221512608370891034550795081818517362, 65376285084408461502234689381573972459125513396366082569016217541041663584, 21679541053220905904510927288790386269175132850042252274547753174760158670843, 21324400663297068481399047979935312225696838775103987934813424263511810834699, 289763376971620586415263245947844816210046230546701258788327344957764939717, 40967283582068681957600723598741436509851332224180615120829315268242768168, 21461893295895327037059181441182965013902520383783813647355113579862887247793, 21325848039999466570360550438977118240390570864280934984247172328693515354234, 21294043552704368897087468350576426571962272752582902692954825892179403079794, 21677450012801568230193684183601572885002230860212020797824047436198366949365, 21638907129448153283707022089913338473147322115786649879543261589555176746777, 196122100186924282937302047441332183757025956565304475294897769263487856406, 392569234357523206882608241763500232207840004647588738054276481672500686712, 252668027134643210375492535292333694292614581387624982648349668379704819991, 21544941470533809535997047481859823358278023483462962355682885339669404069871, 21191892152908081918989650988263359404184056429060781812756326363070358368229, 21423024542688818504918374823577453817908203518144309997034914444964200120362, 21391541288105394766038619046271188994221001023418561644664913323972632838222, 21442460107973636616796391997122174347769757548224653885574465252287531200421, 21191894121096905079400801662571023638728816084051531488502262713233335451705, 611658535085829530731475531678956174590070939351233092540783592313493270321, 21654807243255145882064710151321498018289106530071115115589225714940500181133, 236758832697884990590162108098319256018384768742313014172961613048701059086, 17679232676729902387956827993227407334162514609488906570077505897914248999, 21617380151202513115664190491258036018727194956731358697115782406707217760395];
uint256[] memory s2 = new uint256[](32);
for (uint i = 0; i < 32; i++) {
	s2[i] = tmp_s2[i];
}
// message = "\x50\x72\x61\x63\x74\x69\x63\x61\x6c\x20\x73\x65\x63\x75\x72\x69\x74\x79\x20\x6f\x6e\x20\x74\x68\x65\x20\x63\x68\x61\x69\x6e\x2e"
// salt = "\x14\x30\x45\xd7\x91\xcc\x85\xef\xf5\xb2\x19\x32\xf2\x38\x61\xbc\xf2\x3a\x52\xb5\xda\x67\xea\xf7\xba\xae\x0f\x5f\xb1\x36\x9d\xb7\x8f\x3a\xc4\x5f\x8c\x4a\xc5\x67"
// hash to point
// forgefmt: disable-next-line
uint256[512] memory _hashed = [uint256(2001), 4144, 1500, 3124, 3237, 11284, 6361, 11972, 4861, 2149, 4700, 11459, 7374, 7579, 2082, 9404, 222, 5962, 1001, 7636, 5535, 1133, 10827, 2248, 6517, 11659, 4483, 7461, 392, 2503, 2848, 6021, 11376, 5062, 9961, 12226, 9397, 11442, 10118, 9561, 2250, 11768, 6554, 6029, 2114, 329, 9964, 8305, 4433, 6202, 6321, 6491, 6667, 11471, 8037, 11687, 11142, 2124, 8929, 1048, 5947, 7825, 7503, 6867, 1392, 439, 5180, 9640, 2236, 4759, 8414, 2054, 10176, 945, 3584, 2068, 9237, 5775, 7108, 5921, 5528, 11604, 11794, 7995, 1347, 4876, 11886, 6598, 2814, 9587, 9865, 7873, 121, 11895, 7447, 8742, 12102, 2687, 7194, 4888, 1472, 4337, 1232, 1432, 431, 2804, 3886, 6138, 7303, 5695, 3138, 12146, 8269, 8342, 7676, 10919, 862, 9558, 8004, 1355, 1046, 368, 1422, 1077, 12144, 11093, 4984, 6246, 3386, 8295, 4436, 8001, 1752, 3872, 12227, 9125, 1836, 11234, 498, 3798, 7577, 9156, 5659, 3521, 5411, 6888, 4789, 7974, 11461, 10922, 10028, 4424, 8915, 4436, 1305, 9822, 3936, 8103, 4168, 11203, 971, 7744, 5438, 7075, 2979, 5186, 4183, 1913, 6356, 10, 7870, 9329, 452, 3152, 6617, 11274, 10551, 7251, 4882, 5097, 11071, 5083, 1113, 10605, 7510, 1073, 2978, 9194, 5376, 8521, 11421, 3382, 2041, 6801, 4206, 6739, 11646, 8674, 5586, 7662, 10756, 8649, 7459, 7075, 10013, 10666, 2823, 9853, 10204, 6888, 4565, 10319, 5506, 12021, 9795, 7837, 1428, 3215, 2603, 6260, 7761, 4425, 6213, 5473, 10958, 1350, 1390, 10676, 5168, 9207, 2177, 4325, 11482, 11616, 68, 8073, 4837, 930, 10721, 5866, 4737, 4604, 5616, 9935, 5923, 2613, 7549, 2695, 10251, 948, 3923, 6422, 11518, 3871, 2532, 3792, 10707, 11292, 4912, 11685, 9536, 8066, 7786, 8917, 2889, 3934, 3638, 7040, 3683, 8560, 1497, 10442, 7426, 7209, 576, 6745, 9092, 11949, 12065, 8591, 5500, 2438, 1450, 7243, 1546, 533, 8576, 7606, 6815, 12151, 11817, 10170, 3596, 11503, 4265, 4332, 8446, 8429, 2711, 8176, 4944, 9569, 2943, 602, 5933, 2624, 7507, 818, 2812, 2945, 9885, 3561, 5501, 6182, 1487, 2095, 1276, 474, 465, 3837, 10301, 2513, 5545, 3518, 2840, 2795, 9385, 691, 11066, 5513, 2918, 4577, 9954, 1178, 4072, 11882, 105, 10189, 5767, 844, 5467, 2101, 2757, 11241, 8659, 4330, 4693, 11502, 8022, 8842, 3893, 11939, 10588, 5984, 4685, 7519, 5653, 4788, 11393, 7030, 1629, 7477, 6839, 2927, 11843, 7043, 9225, 7196, 1294, 1699, 5048, 9580, 6085, 11220, 8409, 4679, 3816, 9719, 1169, 12220, 2052, 10873, 8497, 5300, 238, 1817, 10553, 10359, 3899, 5218, 7183, 546, 119, 4915, 3115, 1278, 2344, 6877, 10949, 4209, 7543, 8830, 7670, 6597, 8878, 11121, 6945, 10381, 9758, 2956, 2004, 5521, 4685, 9827, 4627, 9407, 3560, 2793, 3428, 5019, 8332, 5086, 7426, 4640, 7434, 11898, 6666, 6803, 7890, 619, 11010, 1874, 5999, 3742, 62, 2552, 10636, 313, 1927, 11999, 9203, 12213, 8062, 7809, 11031, 10756, 11771, 1344, 7765, 80, 1126, 1903, 8013, 9378, 431, 10553, 1636, 7270, 211, 5310, 2430, 662, 5026, 5297, 9719, 3496, 8534, 11999, 5615, 649, 4232, 1297, 3045, 9335, 738, 5235, 11176, 7254, 3975, 4344, 11919, 5452, 6634, 2507, 5109, 636, 8101, 8855, 0, 4329, 8443, 11701, 2750, 7016, 10320, 4863, 3947, 4271, 4096, 6869, 7455, 11285, 241, 2124, 6313, 7363, 4265, 3420, 11632, 2009, 10304, 7116];
uint256[] memory hashed = new uint256[](512);
for (uint i = 0; i < 512; i++) {
	hashed[i] = _hashed[i];
}
bool result = falcon_core(s2, pkc, hashed);
assertEq(true, result);}
}
